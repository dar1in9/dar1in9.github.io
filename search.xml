<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>某大学登陆流程分析</title>
      <link href="2021/03/05/auth/"/>
      <url>2021/03/05/auth/</url>
      
        <content type="html"><![CDATA[<h3 id="动手！"><a href="#动手！" class="headerlink" title="动手！"></a>动手！</h3><p>首先登录、抓包，查看所提交的参数,<code>password</code>被加密并经过base64编码。<br><img src="/2021/03/05/auth/1.jpg" alt="img"></p><p>F12审查元素，查看登陆表单以及所绑定事件。<br><img src="/2021/03/05/auth/2.jpg" alt="img"></p><p>将<code>password</code>和<code>pwdDefaultEncryptSalt</code>传入<code>_etd2</code>函数，<code>pwdDefaultEncryptSalt</code>（下文中简称key）可在表单中获取。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">doLogin</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> username = casLoginForm.find(<span class="string">&quot;#username&quot;</span>);</span><br><span class="line">    <span class="keyword">var</span> password = casLoginForm.find(<span class="string">&quot;#password&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span> (!checkRequired(username, <span class="string">&quot;usernameError&quot;</span>)) &#123;</span><br><span class="line">        username.focus();</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (!checkRequired(password, <span class="string">&quot;passwordError&quot;</span>)) &#123;</span><br><span class="line">        password.focus();</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> captchaResponse = casLoginForm.find(<span class="string">&quot;#captchaResponse&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span> (!checkRequired(captchaResponse, <span class="string">&quot;cpatchaError&quot;</span>)) &#123;</span><br><span class="line">        captchaResponse.focus();</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    _etd2(password.val(), casLoginForm.find(<span class="string">&quot;#pwdDefaultEncryptSalt&quot;</span>).val());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>将<code>password</code>和<code>key</code>传入<code>encryptAES</code>,可知加密算法为AES。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">_etd2</span>(<span class="params">_p0, _p1</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> _p2 = encryptAES(_p0, _p1);</span><br><span class="line">        $(<span class="string">&quot;#casLoginForm&quot;</span>).find(<span class="string">&quot;#passwordEncrypt&quot;</span>).val(_p2);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (e) &#123;</span><br><span class="line">        $(<span class="string">&quot;#casLoginForm&quot;</span>).find(<span class="string">&quot;#passwordEncrypt&quot;</span>).val(_p0);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>_rds</code>函数为产生指定长度随机字符串，<code>encryptAES</code>函数将64位的随机字符串拼接上<code>password</code>作为第一个参数，<code>key</code>和16位随机字符串作为后两个参数传入<code>_gas</code>函数。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">encryptAES</span>(<span class="params">data, _p1</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (!_p1) &#123;</span><br><span class="line">        <span class="keyword">return</span> data;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">var</span> encrypted = _gas(_rds(<span class="number">64</span>) + data, _p1, _rds(<span class="number">16</span>));</span><br><span class="line">    <span class="keyword">return</span> encrypted;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> $_chars = <span class="string">&#x27;ABCDEFGHJKMNPQRSTWXYZabcdefhijkmnprstwxyz2345678&#x27;</span>;</span><br><span class="line"><span class="keyword">var</span> _chars_len = $_chars.length;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">_rds</span>(<span class="params">len</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> retStr = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; len; i++) &#123;</span><br><span class="line">        retStr += $_chars.charAt(<span class="built_in">Math</span>.floor(<span class="built_in">Math</span>.random() * _chars_len));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> retStr;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可见，加密算法为AES，待加密字符为64位的随机数拼接上<code>password</code>，密钥为<code>key</code>，初始向量IV为16位随机字符串，CBC模式，填充方式为PKCS7。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">_gas</span>(<span class="params">data, key0, iv0</span>) </span>&#123;</span><br><span class="line">    key0 = key0.replace(<span class="regexp">/(^\s+)|(\s+$)/g</span>, <span class="string">&quot;&quot;</span>);</span><br><span class="line">    <span class="keyword">var</span> key = CryptoJS.enc.Utf8.parse(key0);</span><br><span class="line">    <span class="keyword">var</span> iv = CryptoJS.enc.Utf8.parse(iv0);</span><br><span class="line">    <span class="keyword">var</span> encrypted = CryptoJS.AES.encrypt(data, key, &#123;</span><br><span class="line">        iv: iv,</span><br><span class="line">        mode: CryptoJS.mode.CBC,</span><br><span class="line">        padding: CryptoJS.pad.Pkcs7</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="keyword">return</span> encrypted.toString();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>base64编码</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> u = CryptoJS</span><br><span class="line">      , p = u.lib.WordArray;</span><br><span class="line">    u.enc.Base64 = &#123;</span><br><span class="line">        stringify: <span class="function"><span class="keyword">function</span>(<span class="params">d</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">var</span> l = d.words</span><br><span class="line">              , p = d.sigBytes</span><br><span class="line">              , t = <span class="built_in">this</span>._map;</span><br><span class="line">            d.clamp();</span><br><span class="line">            d = [];</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">var</span> r = <span class="number">0</span>; r &lt; p; r += <span class="number">3</span>)</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">var</span> w = (l[r &gt;&gt;&gt; <span class="number">2</span>] &gt;&gt;&gt; <span class="number">24</span> - <span class="number">8</span> * (r % <span class="number">4</span>) &amp; <span class="number">255</span>) &lt;&lt; <span class="number">16</span> | (l[r + <span class="number">1</span> &gt;&gt;&gt; <span class="number">2</span>] &gt;&gt;&gt; <span class="number">24</span> - <span class="number">8</span> * ((r + <span class="number">1</span>) % <span class="number">4</span>) &amp; <span class="number">255</span>) &lt;&lt; <span class="number">8</span> | l[r + <span class="number">2</span> &gt;&gt;&gt; <span class="number">2</span>] &gt;&gt;&gt; <span class="number">24</span> - <span class="number">8</span> * ((r + <span class="number">2</span>) % <span class="number">4</span>) &amp; <span class="number">255</span>, v = <span class="number">0</span>; <span class="number">4</span> &gt; v &amp;&amp; r + <span class="number">0.75</span> * v &lt; p; v++)</span><br><span class="line">                    d.push(t.charAt(w &gt;&gt;&gt; <span class="number">6</span> * (<span class="number">3</span> - v) &amp; <span class="number">63</span>));</span><br><span class="line">            <span class="keyword">if</span> (l = t.charAt(<span class="number">64</span>))</span><br><span class="line">                <span class="keyword">for</span> (; d.length % <span class="number">4</span>; )</span><br><span class="line">                    d.push(l);</span><br><span class="line">            <span class="keyword">return</span> d.join(<span class="string">&quot;&quot;</span>)</span><br><span class="line">        &#125;,</span><br><span class="line">        parse: <span class="function"><span class="keyword">function</span>(<span class="params">d</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">var</span> l = d.length</span><br><span class="line">              , s = <span class="built_in">this</span>._map</span><br><span class="line">              , t = s.charAt(<span class="number">64</span>);</span><br><span class="line">            t &amp;&amp; (t = d.indexOf(t),</span><br><span class="line">            -<span class="number">1</span> != t &amp;&amp; (l = t));</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">var</span> t = [], r = <span class="number">0</span>, w = <span class="number">0</span>; w &lt; l; w++)</span><br><span class="line">                <span class="keyword">if</span> (w % <span class="number">4</span>) &#123;</span><br><span class="line">                    <span class="keyword">var</span> v = s.indexOf(d.charAt(w - <span class="number">1</span>)) &lt;&lt; <span class="number">2</span> * (w % <span class="number">4</span>)</span><br><span class="line">                      , b = s.indexOf(d.charAt(w)) &gt;&gt;&gt; <span class="number">6</span> - <span class="number">2</span> * (w % <span class="number">4</span>);</span><br><span class="line">                    t[r &gt;&gt;&gt; <span class="number">2</span>] |= (v | b) &lt;&lt; <span class="number">24</span> - <span class="number">8</span> * (r % <span class="number">4</span>);</span><br><span class="line">                    r++</span><br><span class="line">                &#125;</span><br><span class="line">            <span class="keyword">return</span> p.create(t, r)</span><br><span class="line">        &#125;,</span><br><span class="line">        _map: <span class="string">&quot;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="登陆复现"><a href="#登陆复现" class="headerlink" title="登陆复现"></a>登陆复现</h3><p>解密验证，发现末尾为<code>password</code>。（推荐工具：cyberchef）<br><img src="/2021/03/05/auth/3.jpg" alt="img"></p><h4 id="CBC模式"><a href="#CBC模式" class="headerlink" title="CBC模式"></a>CBC模式</h4><p><img src="/2021/03/05/auth/cbc_decryption.png" alt="img"><br>可见，初始向量的不同只影响第一块的明文，所以初始向量可自定义。</p><h4 id="复现代码"><a href="#复现代码" class="headerlink" title="复现代码"></a>复现代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">from</span> Crypto.Cipher <span class="keyword">import</span> AES</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"></span><br><span class="line"><span class="comment">#随机字符串产生</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getRandomN</span>(<span class="params">N</span>):</span></span><br><span class="line">    s = <span class="string">&#x27;&#x27;</span></span><br><span class="line">    <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(N):</span><br><span class="line">        s += <span class="built_in">str</span>(random.randint(<span class="number">0</span>,<span class="number">9</span>))</span><br><span class="line">    <span class="keyword">return</span> s</span><br><span class="line"></span><br><span class="line"><span class="comment">#PKCS7填充</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">pad</span>(<span class="params">data</span>):</span></span><br><span class="line">    bs = AES.block_size</span><br><span class="line">    data += (bs - <span class="built_in">len</span>(data)%bs) * <span class="built_in">chr</span>(bs - <span class="built_in">len</span>(data)%bs)</span><br><span class="line">    <span class="keyword">return</span> data</span><br><span class="line"></span><br><span class="line"><span class="comment">#加密函数</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">encrypt</span>(<span class="params">data,key,iv</span>):</span></span><br><span class="line">    iv = iv.encode(<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">    cipher = AES.new(key.encode(<span class="string">&#x27;utf-8&#x27;</span>),AES.MODE_CBC,iv)</span><br><span class="line">    data = cipher.encrypt(pad(data).encode(<span class="string">&#x27;utf-8&#x27;</span>))</span><br><span class="line">    <span class="keyword">return</span> data</span><br><span class="line"></span><br><span class="line"><span class="comment">#解密函数</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">decrypt</span>(<span class="params">data,key</span>):</span></span><br><span class="line">    iv = <span class="string">&#x27;0000000000000000&#x27;</span>.encode(<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">    cipher = AES.new(key,AES.MODE_CBC,iv)</span><br><span class="line">    data = cipher.decrypt(data)</span><br><span class="line">    <span class="keyword">return</span> (data[<span class="number">64</span>:])</span><br><span class="line"></span><br><span class="line"><span class="comment">#base64编码</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getPwd</span>(<span class="params">data,key</span>):</span></span><br><span class="line">    iv = getRandomN(<span class="number">16</span>)</span><br><span class="line">    data  = getRandomN(<span class="number">64</span>) + data</span><br><span class="line">    <span class="keyword">return</span> (base64.b64encode(encrypt(data,key,iv)).decode(<span class="string">&#x27;utf-8&#x27;</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment">#登陆函数</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">login</span>(<span class="params">username,password</span>):</span></span><br><span class="line">    url = <span class="string">&#x27;https://xxx.edu.cn&#x27;</span></span><br><span class="line">    r = ses.get(url,headers=header)</span><br><span class="line">    text = r.text</span><br><span class="line">    l = re.findall(<span class="string">r&#x27;&lt;input type=\&quot;hidden\&quot; .*?=\&quot;.*?\&quot; value=\&quot;(.*?)\&quot;&#x27;</span>,text)</span><br><span class="line">    password = getPwd(password,l[<span class="number">5</span>])</span><br><span class="line">    data = &#123;</span><br><span class="line">        <span class="string">&#x27;username&#x27;</span>:username,</span><br><span class="line">        <span class="string">&#x27;password&#x27;</span>:password,</span><br><span class="line">        <span class="string">&#x27;lt&#x27;</span>:l[<span class="number">0</span>],</span><br><span class="line">        <span class="string">&#x27;dllt&#x27;</span>:l[<span class="number">1</span>],</span><br><span class="line">        <span class="string">&#x27;execution&#x27;</span>:l[<span class="number">2</span>],</span><br><span class="line">        <span class="string">&#x27;_eventId&#x27;</span>:l[<span class="number">3</span>],</span><br><span class="line">        <span class="string">&#x27;rmShown&#x27;</span>:l[<span class="number">4</span>],</span><br><span class="line">    &#125;</span><br><span class="line">    r = ses.post(url,data=data,allow_redirects=<span class="literal">False</span>)</span><br><span class="line"></span><br><span class="line">header = &#123;</span><br><span class="line">    <span class="string">&#x27;User-Agent&#x27;</span>: <span class="string">&#x27;Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36&#x27;</span>,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Ubuntu搭建饥荒服务器</title>
      <link href="2020/06/24/dst/"/>
      <url>2020/06/24/dst/</url>
      
        <content type="html"><![CDATA[<h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><h4 id="本地创建世界"><a href="#本地创建世界" class="headerlink" title="本地创建世界"></a>本地创建世界</h4><p>配置好房间名、密码、游戏模式等，这之后将会运行在你的服务器上。</p><h4 id="获取token和用户ID"><a href="#获取token和用户ID" class="headerlink" title="获取token和用户ID"></a>获取token和用户ID</h4><p>打开游戏左下角的 “账号” 可以获取用户ID，将ID保存在adminlist.txt中。<br><img src="/2020/06/24/dst/id.png" alt="img"></p><p>依次点击上方的游戏、饥荒联机服务器。<br><img src="/2020/06/24/dst/game.png" alt="img"><br><img src="/2020/06/24/dst/token.png" alt="img"><br>将token保存在cluster_token.txt中。</p><p>把cluster_token.txt和adminlist.txt都放在xxx\Documents\Klei\DoNotStarveTogether\xxx\Cluster_1中。<br>其中Cluster_1就是创建的第一个世界，Cluster_2同理。</p><h2 id="动手！"><a href="#动手！" class="headerlink" title="动手！"></a>动手！</h2><h3 id="安装环境依赖"><a href="#安装环境依赖" class="headerlink" title="安装环境依赖"></a>安装环境依赖</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt install libstdc++6:i386 libgcc1:i386 libcurl4-gnutls-dev:i386 lib32gcc1</span><br></pre></td></tr></table></figure><h3 id="64位机器先运行"><a href="#64位机器先运行" class="headerlink" title="64位机器先运行"></a>64位机器先运行</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo dpkg --add-architecture i386 &amp;&amp; sudo apt-get update</span><br></pre></td></tr></table></figure><h3 id="安装steamCMD"><a href="#安装steamCMD" class="headerlink" title="安装steamCMD"></a>安装steamCMD</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ mkdir ~&#x2F;steamcmd</span><br><span class="line">$ cd ~&#x2F;steamcmd</span><br><span class="line">$ wget https:&#x2F;&#x2F;steamcdn-a.akamaihd.net&#x2F;client&#x2F;installer&#x2F;steamcmd_linux.tar.gz</span><br><span class="line">$ tar -xvzf steamcmd_linux.tar.gz</span><br></pre></td></tr></table></figure><h3 id="运行steamCMD"><a href="#运行steamCMD" class="headerlink" title="运行steamCMD"></a>运行steamCMD</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ .&#x2F;steamcmd.sh</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ login anonymous</span><br><span class="line">$ force_install_dir ~&#x2F;dstserver</span><br><span class="line">$ app_update 343050 validate</span><br><span class="line">$ quit</span><br></pre></td></tr></table></figure><p>匿名登陆、指定安装文件夹、安装饥荒服务器软件、退出。</p><h3 id="启动饥荒服务器"><a href="#启动饥荒服务器" class="headerlink" title="启动饥荒服务器"></a>启动饥荒服务器</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd ~&#x2F;dstserver&#x2F;bin</span><br><span class="line">.&#x2F;dontstarve_dedicated_server_nullrenderer</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>目的是使其在 <strong>~/.klei/</strong> 生成基本配置文件，方便覆盖。<br>出现有关token错误时，ctrl+c结束。</p><h3 id="配置存档"><a href="#配置存档" class="headerlink" title="配置存档"></a>配置存档</h3><p>服务器的目录结构和本地的有些许差异。</p><p>本地<br><img src="/2020/06/24/dst/pc.png" alt="img"></p><p>服务器<br><img src="/2020/06/24/dst/server.png" alt="img"></p><p>只需将 <strong>数字/Cluster_1</strong> 覆盖 <strong>Cluster_1</strong> ，并将<strong>数字/client_save</strong>里面内容拖进 <strong>\Cluster_1\Master\save</strong></p><h3 id="运行服务器"><a href="#运行服务器" class="headerlink" title="运行服务器"></a>运行服务器</h3><p>创建 start.sh 如下内容。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> ~/dstserver/bin</span><br><span class="line">screen -S <span class="string">&quot;Don&#x27;t Starve Together Server&quot;</span> ./dontstarve_dedicated_server_nullrenderer</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ chmod +x start.sh</span><br><span class="line">$ .&#x2F;start.sh</span><br></pre></td></tr></table></figure><p>ctrl+a+d可以后台运行</p><h2 id="关于mod"><a href="#关于mod" class="headerlink" title="关于mod"></a>关于mod</h2><p>推荐在本地添加好mod，之后将本地的<strong>数字/Cluster_1/Master/modoverrides.lua</strong>拖进服务器。并在 <strong>~/dstserver/mods/dedicated_server_mods_setup.lua</strong>中如下添加。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">--There are two functions that will install mods, ServerModSetup and ServerModCollectionSetup. Put the calls to the functions in this file and they will be executed on boot.</span><br><span class="line"></span><br><span class="line">--ServerModSetup takes a string of a specific mod&#39;s Workshop id. It will download and install the mod to your mod directory on boot.</span><br><span class="line">--The Workshop id can be found at the end of the url to the mod&#39;s Workshop page.</span><br><span class="line">--Example: http:&#x2F;&#x2F;steamcommunity.com&#x2F;sharedfiles&#x2F;filedetails&#x2F;?id&#x3D;350811795</span><br><span class="line">--ServerModSetup(&quot;350811795&quot;)</span><br><span class="line"></span><br><span class="line">--ServerModCollectionSetup takes a string of a specific mod&#39;s Workshop id. It will download all the mods in the collection and install them to the mod directory on boot.</span><br><span class="line">--The Workshop id can be found at the end of the url to the collection&#39;s Workshop page.</span><br><span class="line">--Example: http:&#x2F;&#x2F;steamcommunity.com&#x2F;sharedfiles&#x2F;filedetails&#x2F;?id&#x3D;379114180</span><br><span class="line">--ServerModCollectionSetup(&quot;379114180&quot;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">ServerModSetup(&quot;378160973&quot;)--Global Positions</span><br><span class="line">ServerModSetup(&quot;362175979&quot;)--Wormhole Marks</span><br><span class="line">ServerModSetup(&quot;444235588&quot;)--Deluxe Campfires 2.11</span><br><span class="line">ServerModSetup(&quot;786556008&quot;)--45 Inventory Slots</span><br><span class="line">ServerModSetup(&quot;375859599&quot;)--Health Info</span><br><span class="line">ServerModSetup(&quot;458587300&quot;)--fast travel</span><br><span class="line">ServerModSetup(&quot;666155465&quot;)--Show Me</span><br><span class="line">ServerModSetup(&quot;50138507&quot;)--pick fastly </span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="遇见的问题"><a href="#遇见的问题" class="headerlink" title="遇见的问题"></a>遇见的问题</h2><h3 id="饥荒更新后搜索不到房间"><a href="#饥荒更新后搜索不到房间" class="headerlink" title="饥荒更新后搜索不到房间"></a>饥荒更新后搜索不到房间</h3><p>在 <strong>~/steamcmd/<strong>下创建</strong>update.sh</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.&#x2F;steamcmd.sh +login anonymous +force_install_dir &#x2F;home&#x2F;xxx&#x2F;dstserver +app_update 343050  +quit</span><br></pre></td></tr></table></figure><p><strong>注意xx要替换</strong></p><h3 id="报错-Directory-‘-var-run-screen’-must-have-mode-755"><a href="#报错-Directory-‘-var-run-screen’-must-have-mode-755" class="headerlink" title="报错 Directory ‘/var/run/screen’ must have mode 755"></a>报错 Directory ‘/var/run/screen’ must have mode 755</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo chmod 755 &#x2F;var&#x2F;run&#x2F;screen </span><br></pre></td></tr></table></figure><h3 id="Screen出现Cannot-open-your-terminal-‘-dev-pts-0’"><a href="#Screen出现Cannot-open-your-terminal-‘-dev-pts-0’" class="headerlink" title="Screen出现Cannot open your terminal ‘/dev/pts/0’"></a>Screen出现Cannot open your terminal ‘/dev/pts/0’</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ script &#x2F;dev&#x2F;null</span><br></pre></td></tr></table></figure><h3 id="Loading-Steam-API…Failed-to-init-SDL-priority-manager-SDL-not-found"><a href="#Loading-Steam-API…Failed-to-init-SDL-priority-manager-SDL-not-found" class="headerlink" title="Loading Steam API…Failed to init SDL priority manager: SDL not found"></a>Loading Steam API…Failed to init SDL priority manager: SDL not found</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt install libsdl2-2.0-0:i386</span><br></pre></td></tr></table></figure><h3 id="客户端创建了世界想在服务器运行"><a href="#客户端创建了世界想在服务器运行" class="headerlink" title="客户端创建了世界想在服务器运行"></a>客户端创建了世界想在服务器运行</h3><p>只需将<strong>数字/client_save</strong>里面内容拖进 <strong>\Cluster_1\Master\save</strong>，并将 <strong>数字\Cluster_1\Master\save</strong> 里的<strong>session</strong>文件夹合并 <strong>\Cluster_1\Master\save</strong>里的<strong>session</strong></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
